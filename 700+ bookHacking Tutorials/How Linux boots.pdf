%PDF-1.3
1 0 obj
<<
/CreationDate(D:20160204102510)
/Title()
/Author(PDFZilla)
/Keywords(PDFZilla,Zilla PDF)
/Producer(PDFZilla - Zilla TXT To PDF Converter)
>>
endobj
5 0 obj
[
750 750 278 278 355 556 556 889 667 190 333 333 389 584 278 333 
278 278 556 556 556 556 556 556 556 556 556 556 278 278 584 584 
584 556 1015 667 667 722 722 667 610 778 722 278 500 667 556 832 
722 778 667 778 722 667 610 722 667 944 667 667 610 278 278 278 
469 556 333 556 556 500 556 556 278 556 556 222 222 500 222 832 
556 556 556 556 333 500 278 556 500 722 500 500 500 334 260 334 
584 750 556 750 222 556 333 1000 556 556 333 1000 667 333 1000 750 
610 750 750 222 222 333 333 350 556 1000 333 1000 500 333 944 750 
500 667 278 333 556 556 556 556 260 556 333 736 370 556 584 333 
736 552 400 549 333 333 333 576 537 333 333 333 365 556 834 834 
834 610 667 667 667 667 667 667 1000 722 667 667 667 667 278 278 
278 278 722 722 778 778 778 778 778 584 778 722 722 722 722 667 
667 610 556 556 556 556 556 556 889 500 556 556 556 556 278 278 
278 278 556 556 556 556 556 556 556 549 610 556 556 556 556 500 
556 500 
]
endobj
6 0 obj
<<
/Type/FontDescriptor
/FontName/Arial
/Ascent 905
/Descent -212
/ItalicAngle 0
/CapHeight 905
/Flags 32
/FontBBox[0 0 0 0]
>>
endobj
7 0 obj
<<
/Type/Font
/Subtype/TrueType
/Name/F0
/BaseFont/Arial
/Encoding/WinAnsiEncoding
/FirstChar 30
/LastChar 255
/Widths 5 0 R
/FontDescriptor 6 0 R
>>
endobj
8 0 obj
<<
/Length 5787
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(How Linux boots) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
( ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(--------------------------------------------------------------------------------------------------------------) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(----------------------------------------------------------------------------------------------------) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
( ///////////*1000+ HACKING TRICKS & TUTORIALS - ebook By Mukesh Bhardwaj Blogger  - Paid Version - only @ ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(TekGyd | itechhacks | Mukeshtricks4u*///////) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(--------------------------------------------------------------------------------------------------------------) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(----------------------------------------------------------------------------------------------------) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
(As it turns out, there isn't much to the boot process:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(   1. A boot loader finds the kernel image on the disk, loads it into memory, and starts it.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(   2. The kernel initializes the devices and its drivers.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(   3. The kernel mounts the root filesystem.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(   4. The kernel starts a program called init.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(   5. init sets the rest of the processes in motion.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(   6. The last processes that init starts as part of the boot sequence allow you to log in.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(Identifying each stage of the boot process is invaluable in fixing boot problems and understanding the system ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(as a whole. To start, zero in on the boot loader, which is the initial screen or prompt you get after the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(computer does its power-on self-test, asking which operating system to run. After you make a choice, the boot ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
(loader runs the Linux kernel, handing control of the system to the kernel.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
(There is a detailed discussion of the kernel elsewhere in this book from which this article is excerpted. This) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(article covers the kernel initialization stage, the stage when the kernel prints a bunch of messages about the) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(hardware present on the system. The kernel starts init just after it displays a message proclaiming that the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
(kernel has mounted the root filesystem:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(VFS: Mounted root \(ext2 filesystem\) readonly.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(Soon after, you will see a message about init starting, followed by system service startup messages, and ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(finally you get a login prompt of some sort.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
(NOTE On Red Hat Linux, the init note is especially obvious, because it "welcomes" you to "Red Hat Linux." All ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(messages thereafter show success or failure in brackets at the right-hand side of the screen.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(Most of this chapter deals with init, because it is the part of the boot sequence where you have the most ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
(control.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(init) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(There is nothing special about init. It is a program just like any other on the Linux system, and you'll find ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
(it in /sbin along with other system binaries. The main purpose of init is to start and stop other programs in ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
(a particular sequence. All you have to know is how this sequence works.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(There are a few different variations, but most Linux distributions use the System V style discussed here. Some) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(distributions use a simpler version that resembles the BSD init, but you are unlikely to encounter this.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(Runlevels) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(At any given time on a Linux system, a certain base set of processes is running. This state of the machine is ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(called its runlevel, and it is denoted with a number from 0 through 6. The system spends most of its time in a) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(single runlevel. However, when you shut the machine down, init switches to a different runlevel in order to ) Tj
ET
endstream
endobj
9 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 8 0 R
>>
endobj
10 0 obj
<<
/Length 5168
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(terminate the system services in an orderly fashion and to tell the kernel to stop. Yet another runlevel is ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(for single-user mode, discussed later.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(The easiest way to get a handle on runlevels is to examine the init configuration file, /etc/inittab. Look for) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(a line like the following:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(id:5:initdefault:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
(This line means that the default runlevel on the system is 5. All lines in the inittab file take this form, ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(with four fields separated by colons occurring in the following order:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(# A unique identifier \(a short string, such as id in the preceding example\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
(# The applicable runlevel number\(s\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(# The action that init should take \(in the preceding example, the action is to set the default runlevel to 5\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(# A command to execute \(optional\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(There is no command to execute in the preceding initdefault example because a command doesn't make sense in ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(the context of setting the default runlevel. Look a little further down in inittab, until you see a line like ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(this:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(l5:5:wait:/etc/rc.d/rc 5) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(This line triggers most of the system configuration and services through the rc*.d and init.d directories. You) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(can see that init is set to execute a command called /etc/rc.d/rc 5 when in runlevel 5. The wait action tells ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
(when and how init runs the command: run rc 5 once when entering runlevel 5, and then wait for this command to ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(finish before doing anything else.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(There are several different actions in addition to initdefault and wait, especially pertaining to power ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(management, and the inittab\(5\) manual page tells you all about them. The ones that you're most likely to ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
(encounter are explained in the following sections.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(respawn) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(The respawn action causes init to run the command that follows, and if the command finishes executing, to run ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(it again. You're likely to see something similar to this line in your inittab file:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
(1:2345:respawn:/sbin/mingetty tty1) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(The getty programs provide login prompts. The preceding line is for the first virtual console \(/dev/tty1\), the) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(one you see when you press ALT-F1 or CONTROL-ALT-F1. The respawn action brings the login prompt back after you) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
(log out.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
(ctrlaltdel) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
(The ctrlaltdel action controls what the system does when you press CONTROL-ALT-DELETE on a virtual console. On) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
(most systems, this is some sort of reboot command using the shutdown command.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(sysinit) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
(The sysinit action is the very first thing that init should run when it starts up, before entering any ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(runlevels.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(How processes in runlevels start) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(You are now ready to learn how init starts the system services, just before it lets you log in. Recall this ) Tj
ET
endstream
endobj
11 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 10 0 R
>>
endobj
12 0 obj
<<
/Length 5208
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(inittab line from earlier:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(l5:5:wait:/etc/rc.d/rc 5) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(This small line triggers many other programs. rc stands for run commands, and you will hear people refer to ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(the commands as scripts, programs, or services. So, where are these commands, anyway?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(For runlevel 5, in this example, the commands are probably either in /etc/rc.d/rc5.d or /etc/rc5.d. Runlevel 1) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
(uses rc1.d, runlevel 2 uses rc2.d, and so on. You might find the following items in the rc5.d directory:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(S10sysklogd       S20ppp          S99gpm) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
(S12kerneld        S25netstd_nfs   S99httpd) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(S15netstd_init    S30netstd_misc  S99rmnologin) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(S18netbase        S45pcmcia       S99sshd) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(S20acct           S89atd) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(S20logoutd        S89cron ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(The rc 5 command starts programs in this runlevel directory by running the following commands:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(S10sysklogd start) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(S12kerneld start) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(S15netstd_init start) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(S18netbase start) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
(...) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(S99sshd start ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(Notice the start argument in each command. The S in a command name means that the command should run in start ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(mode, and the number \(00 through 99\) determines where in the sequence rc starts the command.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(The rc*.d commands are usually shell scripts that start programs in /sbin or /usr/sbin. Normally, you can ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(figure out what one of the commands actually does by looking at the script with less or another pager program.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(You can start one of these services by hand. For example, if you want to start the httpd Web server program ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(manually, run S99httpd start. Similarly, if you ever need to kill one of the services when the machine is on, ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(you can run the command in the rc*.d directory with the stop argument \(S99httpd stop, for instance\).) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(Some rc*.d directories contain commands that start with K \(for "kill," or stop mode\). In this case, rc runs ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(the command with the stop argument instead of start. You are most likely to encounter K commands in runlevels ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(that shut the system down.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(Adding and removing services) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(If you want to add, delete, or modify services in the rc*.d directories, you need to take a closer look at the) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
(files inside. A long listing reveals a structure like this:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
(lrwxrwxrwx . . . S10sysklogd -> ../init.d/sysklogd) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(lrwxrwxrwx . . . S12kerneld -> ../init.d/kerneld) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(lrwxrwxrwx . . . S15netstd_init -> ../init.d/netstd_init) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
(lrwxrwxrwx . . . S18netbase -> ../init.d/netbase) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(... ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(The commands in an rc*.d directory are actually symbolic links to files in an init.d directory, usually in ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(/etc or /etc/rc.d. Linux distributions contain these links so that they can use the same startup scripts for ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(all runlevels. This convention is by no means a requirement, but it often makes organization a little easier.) Tj
ET
endstream
endobj
13 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 12 0 R
>>
endobj
14 0 obj
<<
/Length 5619
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(To prevent one of the commands in the init.d directory from running in a particular runlevel, you might think ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(of removing the symbolic link in the appropriate rc*.d directory. This does work, but if you make a mistake ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(and ever need to put the link back in place, you might have trouble remembering the exact name of the link. ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(Therefore, you shouldn't remove links in the rc*.d directories, but rather, add an underscore \(_\) to the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(beginning of the link name like this:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(mv S99httpd _S99httpd) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(At boot time, rc ignores _S99httpd because it doesn't start with S or K. Furthermore, the original name is ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(still obvious, and you have quick access to the command if you're in a pinch and need to start it by hand.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(To add a service, you must create a script like the others in the init.d directory and then make a symbolic ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(link in the correct rc*.d directory. The easiest way to write a script is to examine the scripts already in ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(init.d, make a copy of one that you understand, and modify the copy.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(When adding a service, make sure that you choose an appropriate place in the boot sequence to start the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(service. If the service starts too soon, it may not work, due to a dependency on some other service. For ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(non-essential services, most systems administrators prefer numbers in the 90s, after most of the services that) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(came with the system.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(Linux distributions usually come with a command to enable and disable services in the rc*.d directories. For ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(example, in Debian, the command is update-rc.d, and in Red Hat Linux, the command is chkconfig. Graphical user) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
(interfaces are also available. Using these programs helps keep the startup directories consistent and helps ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(with upgrades.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(HINT: One of the most common Linux installation problems is an improperly configured XFree86 server that ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(flicks on and off, making the system unusable on console. To stop this behavior, boot into single-user mode ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
(and alter your runlevel or runlevel services. Look for something containing xdm, gdm, or kdm in your rc*.d ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(directories, or your /etc/inittab.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(Controlling init) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(Occasionally, you need to give init a little kick to tell it to switch runlevels, to re-read the inittab file,) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(or just to shut down the system. Because init is always the first process on a system, its process ID is ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
(always 1.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(You can control init with telinit. For example, if you want to switch to runlevel 3, use this command:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
(telinit 3) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
(When switching runlevels, init tries to kill off any processes that aren't in the inittab file for the new ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(runlevel. Therefore, you should be careful about changing runlevels.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
(When you need to add or remove respawning jobs or make any other change to the inittab file, you must tell ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
(init about the change and cause it to re-read the file. Some people use kill -HUP 1 to tell init to do this. ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(This traditional method works on most versions of Unix, as long as you type it correctly. However, you can ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(also run this telinit command:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(telinit q) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(You can also use telinit s to switch to single-user mode.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(Shutting down) Tj
ET
endstream
endobj
15 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 14 0 R
>>
endobj
16 0 obj
<<
/Length 4693
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(init also controls how the system shuts down and reboots. The proper way to shut down a Linux machine is to ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(use the shutdown command.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(There are two basic ways to use shutdown. If you halt the system, it shuts the machine down and keeps it down.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(To make the machine halt immediately, use this command:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(shutdown -h now) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(On most modern machines with reasonably recent versions of Linux, a halt cuts the power to the machine. You ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(can also reboot the machine. For a reboot, use -r instead of -h.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(The shutdown process takes several seconds. You should never reset or power off a machine during this stage.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(In the preceding example, now is the time to shut down. This argument is mandatory, but there are many ways of) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(specifying it. If you want the machine to go down sometime in the future, one way is to use +n, where n is the) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(number of minutes shutdown should wait before doing its work. For other options, look at the shutdown\(8\) ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(manual page.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(To make the system reboot in 10 minutes, run this command:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(shutdown -r +10) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
(On Linux, shutdown notifies anyone logged on that the machine is going down, but it does little real work. If ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(you specify a time other than now, shutdown creates a file called /etc/nologin. When this file is present, the) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
(system prohibits logins by anyone except the superuser.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(When system shutdown time finally arrives, shutdown tells init to switch to runlevel 0 for a halt and runlevel) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
(6 for a reboot. When init enters runlevel 0 or 6, all of the following takes place, which you can verify by ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(looking at the scripts inside rc0.d and rc6.d:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(   1. init kills every process that it can \(as it would when switching to any other runlevel\). ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(# The initial rc0.d/rc6.d commands run, locking system files into place and making other preparations for ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(shutdown.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
(# The next rc0.d/rc6.d commands unmount all filesystems other than the root.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(# Further rc0.d/rc6.d commands remount the root filesystem read-only.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(# Still more rc0.d/rc6.d commands write all buffered data out to the filesystem with the sync program.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(# The final rc0.d/rc6.d commands tell the kernel to reboot or stop with the reboot, halt, or poweroff program.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(The reboot and halt programs behave differently for each runlevel, potentially causing confusion. By default, ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
(these programs call shutdown with the -r or -h options, but if the system is already at the halt or reboot ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(runlevel, the programs tell the kernel to shut itself off immediately. If you really want to shut your machine) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
(down in a hurry \(disregarding any possible damage from a disorderly shutdown\), use the -f option. ) Tj
ET
endstream
endobj
17 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 16 0 R
>>
endobj
18 0 obj
<<
/Type/Catalog
/Pages 2 0 R
>>
endobj
2 0 obj
<<
/Type/Pages
/Kids[
9 0 R
11 0 R
13 0 R
15 0 R
17 0 R
]
/Count 5
/Resources 3 0 R
>>
endobj
3 0 obj
<<
/ProcSet[/PDF/Text/ImageC]
/Font<<
/F0 7 0 R
>>
>>
endobj
xref
0 19
0000000000 65535 f
0000000009 00000 n
0000028682 00000 n
0000028784 00000 n
0000000168 00000 n
0000000168 00000 n
0000001113 00000 n
0000001256 00000 n
0000001421 00000 n
0000007259 00000 n
0000007353 00000 n
0000012573 00000 n
0000012669 00000 n
0000017929 00000 n
0000018025 00000 n
0000023696 00000 n
0000023792 00000 n
0000028537 00000 n
0000028633 00000 n
trailer
<<
/Size 19
/Root 18 0 R
/Info 1 0 R
/ID[(424044341ttoLubtp)(424044341ttoLubtp)]
>>
startxref
28853
%%EOF
