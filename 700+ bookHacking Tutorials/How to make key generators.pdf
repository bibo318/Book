%PDF-1.3
1 0 obj
<<
/CreationDate(D:20160204102512)
/Title()
/Author(PDFZilla)
/Keywords(PDFZilla,Zilla PDF)
/Producer(PDFZilla - Zilla TXT To PDF Converter)
>>
endobj
5 0 obj
[
750 750 278 278 355 556 556 889 667 190 333 333 389 584 278 333 
278 278 556 556 556 556 556 556 556 556 556 556 278 278 584 584 
584 556 1015 667 667 722 722 667 610 778 722 278 500 667 556 832 
722 778 667 778 722 667 610 722 667 944 667 667 610 278 278 278 
469 556 333 556 556 500 556 556 278 556 556 222 222 500 222 832 
556 556 556 556 333 500 278 556 500 722 500 500 500 334 260 334 
584 750 556 750 222 556 333 1000 556 556 333 1000 667 333 1000 750 
610 750 750 222 222 333 333 350 556 1000 333 1000 500 333 944 750 
500 667 278 333 556 556 556 556 260 556 333 736 370 556 584 333 
736 552 400 549 333 333 333 576 537 333 333 333 365 556 834 834 
834 610 667 667 667 667 667 667 1000 722 667 667 667 667 278 278 
278 278 722 722 778 778 778 778 778 584 778 722 722 722 722 667 
667 610 556 556 556 556 556 556 889 500 556 556 556 556 278 278 
278 278 556 556 556 556 556 556 556 549 610 556 556 556 556 500 
556 500 
]
endobj
6 0 obj
<<
/Type/FontDescriptor
/FontName/Arial
/Ascent 905
/Descent -212
/ItalicAngle 0
/CapHeight 905
/Flags 32
/FontBBox[0 0 0 0]
>>
endobj
7 0 obj
<<
/Type/Font
/Subtype/TrueType
/Name/F0
/BaseFont/Arial
/Encoding/WinAnsiEncoding
/FirstChar 30
/LastChar 255
/Widths 5 0 R
/FontDescriptor 6 0 R
>>
endobj
8 0 obj
<<
/Length 5080
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(How to make key generators?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(-===========================-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
( ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(--------------------------------------------------------------------------------------------------------------) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(----------------------------------------------------------------------------------------------------) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
( ///////////*1000+ HACKING TRICKS & TUTORIALS - ebook By Mukesh Bhardwaj Blogger  - Paid Version - only @ ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(TekGyd | itechhacks | Mukeshtricks4u*///////) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(--------------------------------------------------------------------------------------------------------------) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
(----------------------------------------------------------------------------------------------------) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(Introduction) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(------------) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(I take no responsibility of the usage of this information.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(This tutorial, is for educational knowledge ONLY.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(Hi there, in this tutorial, I intend to teach you how to make a pretty) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(simple keygen, of a program called W3Filer 32 V1.1.3.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(W3Filer is a pretty good web downloader...) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(I guess some of you might know the program.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(I`ll assume you know:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(A.How to use debugger \(in this case, SoftIce\).) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(B.How to crack, generally \(finding protection routines,patching them,etc...\).) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
(C.How to use Disassembler \(This knowledge can help\).) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(D.Assembly.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
(E.How to code in Turbo Pascal ™.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(Tools you`ll need:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(A.SoftIce 3.00/01 or newer.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
(B.WD32Asm. \(Not a must\).) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(C.The program W3Filer V1.13 \(if not provided in this package\), can be found in) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(www.windows95.com I believe.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(D.Turbo Pascal \(ANY version\).) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(Well, enough blah blah, let's go cracking...) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(Run W3Filer 32.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(A nag screen pops, and , demands registration \(Hmm, this sux ;-\)\) Now,) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
(We notice this program has some kind of serial number \(Mine is 873977046\),) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(Let's keep the serial in mind, I bet we`ll meet it again while we're on) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(the debugger.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(Well, now, let's put your name and a dummy reg code...) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
(set a BP on GetDlgItemTextA, and, press OK.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(We pop inside GetDlgItemTextA, Lets find the registration routine...) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
(I`ll save you the work, the registration routine is this:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(:00404DB2 8D95A8FAFFFF lea edx, dword ptr [ebp+FFFFFAA8]) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
(:00404DB8 52 push edx ---> Your user name here.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
(:00404DB9 E80B550000 call 0040A2C9 ---> Registration routine.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
(:00404DBE 83C408 add esp, 00000008 ---> Dunno exactly what is it.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(:00404DC1 85C0 test eax, eax ---> Boolean identifier, 0 if) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(:00404DC3 7D17 jge 00404DDC ---> registration failed, 1 if) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
(OK.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(Well, Let's enter the CALL 40A2C9, and see what's inside it:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
(\(Please read my comments in the code\).) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(* Referenced by a CALL at Addresses:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(|:00404DB9 , :00407F76) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(|) Tj
ET
endstream
endobj
9 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 8 0 R
>>
endobj
10 0 obj
<<
/Length 4428
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(:0040A2C9 55 push ebp) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(:0040A2CA 8BEC mov ebp, esp) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(:0040A2CC 81C4B0FEFFFF add esp, FFFFFEB0) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(:0040A2D2 53 push ebx) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(:0040A2D3 56 push esi) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(:0040A2D4 57 push edi) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(:0040A2D5 8B5508 mov edx, dword ptr [ebp+08]) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(:0040A2D8 8DB500FFFFFF lea esi, dword ptr [ebp+FFFFFF00]) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
(:0040A2DE 33C0 xor eax, eax) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(:0040A2E0 EB16 jmp 0040A2F8) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(* Referenced by a \(U\)nconditional or ©onditional Jump at Address:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
(|:0040A2FB©) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(|) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(:0040A2E2 0FBE0A movsx ecx, byte ptr [edx] ----> Here Starts the) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(interesting part.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(:0040A2E5 83F920 cmp ecx, 00000020 ----> ECX is the the current) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(char in the user name, Hmm, 20h=' '...) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(:0040A2E8 740D je 0040A2F7 ----> Let's see,) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(:0040A2EA 8A0A mov cl, byte ptr [edx] ----> Generally, all this loop) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(does, is copying) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(the user name from) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
([EDX], to [ESI], WITHOUT the spaces!) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(\(Keep this in mind! \).) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
(:0040A2EC 880C06 mov byte ptr [esi+eax], cl) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(:0040A2EF 42 inc edx) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
(:0040A2F0 40 inc eax) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(:0040A2F1 C6040600 mov byte ptr [esi+eax], 00) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(:0040A2F5 EB01 jmp 0040A2F8) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
(* Referenced by a \(U\)nconditional or ©onditional Jump at Address:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(|:0040A2E8©) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(|) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(:0040A2F7 42 inc edx) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(* Referenced by a \(U\)nconditional or ©onditional Jump at Addresses:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(|:0040A2E0\(U\), :0040A2F5\(U\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(|) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
(:0040A2F8 803A00 cmp byte ptr [edx], 00) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(:0040A2FB 75E5 jne 0040A2E2 ----------------> This is the loop , we got) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(what it does,) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(Let's continue tracing) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
(the code...) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(:0040A2FD 56 push esi --------> The user name is pushed, in order) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
(to) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(Upcase it's chars.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
(* Reference To: USER32.CharUpperA, Ord:0000h) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
(|) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
(:0040A2FE E80F330000 Call User!CharUpper ---> After this, our name is in) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(upper case.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(:0040A303 56 push esi -----> Our name in upper case here.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
(* Reference To: cw3220mt._strlen, Ord:0000h) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(|) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
(:0040A304 E86F300000 Call 0040D378 ---> This is the length of our name.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(:0040A309 59 pop ecx) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(:0040A30A 8BC8 mov ecx, eax ---> ECX=Length.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(:0040A30C 83F904 cmp ecx, 00000004 ---> Length>=4 \(MUST\).) Tj
ET
endstream
endobj
11 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 10 0 R
>>
endobj
12 0 obj
<<
/Length 4796
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(:0040A30F 7D05 jge 0040A316 ---> Let's go to this address...) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(:0040A311 83C8FF or eax, FFFFFFFF) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(:0040A314 EB67 jmp 0040A37D) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(* Referenced by a \(U\)nconditional or ©onditional Jump at Address:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(|:0040A30F©) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(|) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(:0040A316 33D2 xor edx, edx) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(:0040A318 33C0 xor eax, eax) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
(:0040A31A 3BC8 cmp ecx, eax) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(:0040A31C 7E17 jle 0040A335 ---> \(Not important, just another useless) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(checking\).) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
(===================================================================================) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(============ FROM HERE AND ON, THE IMPORTANT CODE, PAY ATTENTION ==================) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(===================================================================================) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(One thing before we continue, EDX = 00000000h as we enter to the next instructions.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(* Referenced by a \(U\)nconditional or ©onditional Jump at Address:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(|:0040A333©) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(|) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(:0040A31E 0FBE1C06 movsx ebx, byte ptr [esi+eax] ---> EBX <--- char in user) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(name, offset EAX.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(:0040A322 C1E303 shl ebx, 03 -----> Hmm, it shl's the char by 03h...) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(\(Remember that\).) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(:0040A325 0FBE3C06 movsx edi, byte ptr [esi+eax] ---> Now EDI <--- Char in) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
(user name , offset EAX.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(:0040A329 0FAFF8 imul edi, eax -----> It multiplies the char by the) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
(offset in user name! \(Remember that\).) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(:0040A32C 03DF add ebx, edi -----> Adds the result to EBX \(That was) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(Shelled \(Ding Dong =\)\).) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
(:0040A32E 03D3 add edx, ebx -----> EDX=EDX+EBX!!! - This is the CORE) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(of this registration routine!!!) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(:0040A330 40 inc eax -----> Increase EAX by one \(next char\).) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(:0040A331 3BC8 cmp ecx, eax) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(:0040A333 7FE9 jg 0040A31E ----> If ECX<EAX then, we leave the) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(loop.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(* Referenced by a \(U\)nconditional or ©onditional Jump at Address:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
(|:0040A31C©) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(|) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(:0040A335 A120674100 mov eax, dword ptr [00416720] ---> HMMMMMM, What's in) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(here?????) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
(:0040A33A C1F803 sar eax, 03 ---------> WAIT! Please type in SIce '?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(EAX') Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
(Does this number in EAX look) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(familiar to us? ;-\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
(If you still don`t understand,) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
(than, It's) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
(our SERIAL NUMBER! \(PLEASE, take) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(your time, and check by) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(yourself - don`t trust me!\). OK,) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
(so now we know,) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(That it SHR's EAX by 03 \(SAR is) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
(almost identical to SHR\).) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(:0040A33D 03D0 add edx, eax ---------> Hmm, it adds the result from the) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(loop, the serial number shr'd by 03h) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(:0040A33F 52 push edx -------> Let's continue. \(At this point, I) Tj
ET
endstream
endobj
13 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 12 0 R
>>
endobj
14 0 obj
<<
/Length 4485
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(can tell you , the reg number, is) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(in EDX - only that the reg number) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(is in HEX --> That's how you enter it\).) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(* Possible StringData Ref from Data Obj ->"%lx") Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(|) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(:0040A340 685EF54000 push 0040F55E) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(:0040A345 8D95B0FEFFFF lea edx, dword ptr [ebp+FFFFFEB0]) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(:0040A34B 52 push edx) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
(* Reference To: USER32.wsprintfA, Ord:0000h) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(|) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(:0040A34C E8E5320000 Call 0040D636 -------> This one, does HEX2STR \(Takes) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
(the value from EDX, and turns it to an hex string\).) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(:0040A351 83C40C add esp, 0000000C) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(:0040A354 8D8DB0FEFFFF lea ecx, dword ptr [ebp+FFFFFEB0] -----> type 'd ecx' -) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(THIS is the reg number! That's enough for us, the rest of) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(the code, is) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(just for comparing the correct reg code with ours.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(:0040A35A 51 push ecx) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(* Reference To: USER32.CharLowerA, Ord:0000h) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(|) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(:0040A35B E8B8320000 Call 0040D618) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(:0040A360 8D85B0FEFFFF lea eax, dword ptr [ebp+FFFFFEB0]) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(:0040A366 50 push eax) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
(:0040A367 FF750C push [ebp+0C]) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(* Reference To: cw3220mt._strcmp, Ord:0000h) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
(|) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(:0040A36A E875300000 Call 0040D3E4) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(:0040A36F 83C408 add esp, 00000008) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
(:0040A372 85C0 test eax, eax) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(:0040A374 7405 je 0040A37B) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(:0040A376 83C8FF or eax, FFFFFFFF) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(:0040A379 EB02 jmp 0040A37D) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(* Referenced by a \(U\)nconditional or ©onditional Jump at Address:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(|:0040A374©) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(|) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
(:0040A37B 33C0 xor eax, eax) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(* Referenced by a \(U\)nconditional or ©onditional Jump at Addresses:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(|:0040A314\(U\), :0040A379\(U\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(|) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
(:0040A37D 5F pop edi) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(:0040A37E 5E pop esi) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
(:0040A37F 5B pop ebx) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(:0040A380 8BE5 mov esp, ebp) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
(:0040A382 5D pop ebp) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
(:0040A383 C3 ret) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
(Making the actual Keygen) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(~~~~~~~~~~~~~~~~~~~~~~~~) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(Now, after I've explained how does the program calculate the registration) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
(code, you can either write your own keymaker, without looking at my code, or) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(look at my code \(in Turbo Pascal - sorry for all you C lovers ;-\) Next time\).) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
(That's it, here's the source of my keygen:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(------------------- Cut here ---------------------------------------------) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(Program W3FilerKeygen;) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(var) Tj
ET
endstream
endobj
15 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 14 0 R
>>
endobj
16 0 obj
<<
/Length 2814
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(Key,SerialNum,EB,ED,digit:Longint;) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(I,x:Byte;) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(Name,KeyHex:String;) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(begin) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(Writeln\(' W3Filer32 V1.1.3 Keymaker'\);) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(writeln\('Cracked by ^pain^ ''97 / Rebels!'\);) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(Write\('Your Name:'\); { Read the name }) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(readln\(Name\);) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
(Write\('Serial Number:'\);) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(readln\(SerialNum\); {Yes, we need the serial number for the calculation!}) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(Key:=0;) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
(x:=0;) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(For I:=1 to length\(Name\) do) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(begin) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(Name[I]:=upcase\(Name[i]\);) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(If Name[I]<>' ' then begin) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(eb:=ord\(Name[I]\) shl 3; {EB = Name[I] Shl 03h}) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(Ed:=ord\(Name[I]\); {ED = Name[I]}) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(ed:=ed*\(x\); {ED=ED*Offset}) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(inc\(x\);) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(eb:=eb+ed; {Add ED to EB}) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(Key:=Key+EB; {Add EB to KEY}) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(end;) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
(end;) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(Key:=Key+\(SerialNum shr 3\); { Add SerialNum shr 03h to Key}) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
({ From here, this is just HEX2STRING --> I`m quite sure it's) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(Self explaintory, else - go and learn number bases again! ;-\)}) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(KeyHex:='';) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
(repeat) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(digit:=Key mod 16;) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(key:=key div 16;) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(If digit<10 then KeyHex:=Chr\(Digit+ord\('0'\)\)+KeyHex;) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(If digit>10 then KeyHex:=Chr\(Digit-10+ord\('a'\)\)+KeyHex;) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(until key=0;) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(writeln\('Your Key:',KeyHex\);) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
(writeln\(' Enjoy!'\);) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(end.) Tj
ET
endstream
endobj
17 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 16 0 R
>>
endobj
18 0 obj
<<
/Type/Catalog
/Pages 2 0 R
>>
endobj
2 0 obj
<<
/Type/Pages
/Kids[
9 0 R
11 0 R
13 0 R
15 0 R
17 0 R
]
/Count 5
/Resources 3 0 R
>>
endobj
3 0 obj
<<
/ProcSet[/PDF/Text/ImageC]
/Font<<
/F0 7 0 R
>>
>>
endobj
xref
0 19
0000000000 65535 f
0000000009 00000 n
0000023810 00000 n
0000023912 00000 n
0000000168 00000 n
0000000168 00000 n
0000001113 00000 n
0000001256 00000 n
0000001421 00000 n
0000006552 00000 n
0000006646 00000 n
0000011126 00000 n
0000011222 00000 n
0000016070 00000 n
0000016166 00000 n
0000020703 00000 n
0000020799 00000 n
0000023665 00000 n
0000023761 00000 n
trailer
<<
/Size 19
/Root 18 0 R
/Info 1 0 R
/ID[(424044342ttotmeegetsd)(424044342ttotmeegetsd)]
>>
startxref
23981
%%EOF
