%PDF-1.3
1 0 obj
<<
/CreationDate(D:20160204102517)
/Title()
/Author(PDFZilla)
/Keywords(PDFZilla,Zilla PDF)
/Producer(PDFZilla - Zilla TXT To PDF Converter)
>>
endobj
5 0 obj
[
750 750 278 278 355 556 556 889 667 190 333 333 389 584 278 333 
278 278 556 556 556 556 556 556 556 556 556 556 278 278 584 584 
584 556 1015 667 667 722 722 667 610 778 722 278 500 667 556 832 
722 778 667 778 722 667 610 722 667 944 667 667 610 278 278 278 
469 556 333 556 556 500 556 556 278 556 556 222 222 500 222 832 
556 556 556 556 333 500 278 556 500 722 500 500 500 334 260 334 
584 750 556 750 222 556 333 1000 556 556 333 1000 667 333 1000 750 
610 750 750 222 222 333 333 350 556 1000 333 1000 500 333 944 750 
500 667 278 333 556 556 556 556 260 556 333 736 370 556 584 333 
736 552 400 549 333 333 333 576 537 333 333 333 365 556 834 834 
834 610 667 667 667 667 667 667 1000 722 667 667 667 667 278 278 
278 278 722 722 778 778 778 778 778 584 778 722 722 722 722 667 
667 610 556 556 556 556 556 556 889 500 556 556 556 556 278 278 
278 278 556 556 556 556 556 556 556 549 610 556 556 556 556 500 
556 500 
]
endobj
6 0 obj
<<
/Type/FontDescriptor
/FontName/Arial
/Ascent 905
/Descent -212
/ItalicAngle 0
/CapHeight 905
/Flags 32
/FontBBox[0 0 0 0]
>>
endobj
7 0 obj
<<
/Type/Font
/Subtype/TrueType
/Name/F0
/BaseFont/Arial
/Encoding/WinAnsiEncoding
/FirstChar 30
/LastChar 255
/Widths 5 0 R
/FontDescriptor 6 0 R
>>
endobj
8 0 obj
<<
/Length 4210
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
( Tips) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(Speeding up your hard drive \(#1\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(Get faster file transfer by using 32-bit transfers on your hard drive) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(Just add the line:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(hdparm -c3 /dev/hdX) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(to a bootup script.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
(If you use SuSE or other distros based on SYS V,) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(/sbin/init.d/boot.local) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(should work for you.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(This enables 32-bit transfer on your hard drive. On some systems it can improve transfer performance by 75%.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(To test your performance gain, type:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(hdparm -t -T /dev/hdX) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(Protecting yourself from being a spam base\(#2\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
(Sendmail allows for someone to telnet to port 25 and do an expn \(expand\) to see what users and aliases are on ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(your machine. Also, vrfy \(verify\) means someone can get legal e-mail addresses from your box and send spam ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
(through your machine.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(Don't want that, so look in your /etc/sendmail.cf file for a line that looks like this:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(###############) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(# Options #) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(###############) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(Now cut and paste these next few lines below that:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
(# turning off the expand option and requiring a helo from) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(# a remote computer) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(Opnoexpn,novrfy,needmailhelo) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
(Now there is no expansion, no verify, and sendmail requires a helo with a legitimate DNS in order to use the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(mailer.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(Then look in your /etc/mail/aliases file and ensure you have only your own boxen and/or subnet in there as OK ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
(or RELAY. That will help cut down on spammers' ability to find relay machines to do their dirty work for them.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
(Cleaning up Netscape crashes\(#3\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(You have a tip about Netscape leaving copies of itself running below, but you can make a general shell script ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(to clean up a Netscape crash like this:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(#!/bin/sh) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
(#kill.netscape) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(killall -9 netscape) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(rm ~/.netscape/lock) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
() Tj
ET
endstream
endobj
9 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 8 0 R
>>
endobj
10 0 obj
<<
/Length 4968
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(Then all your users can use it and clean up the dreaded hundred instances of Netscape running when it crashed.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(Change netscape to netscape-communicator or netscape-navigator as appropriate) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(More DOS-like commands\(#4\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(Many people are moving to Linux because they miss the stability of good old DOS. In that light, many users are) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(typing DOS commands \(which originated from UNIX in the first place\) that look fine but cause errors. The ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(command "cd.." in DOS is perfectly valid, but Linux balks. This is because "cd" is a command, and any ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(parameter for that command must be separated from the command by a space. The same goes for "cd/" and "cd~". A) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
(quick fix is here.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(Use your favorite text editor in your home directory to edit the file ".bashrc". The period is there on ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
(purpose, this hides the file from normal ls display.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(Add the lines:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(alias cd/="cd /") Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(alias cd~="cd ~") Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(alias cd..="cd ..") Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(And I usually add these...) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(alias md="mkdir") Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(alias rd="rmdir -i") Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
(alias rm="rm -i") Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
(and my first and still favorite alias...) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(alias ls="ls --color") Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(alias is a powerful tool, and can be used in the .bashrc script as well as from the command line. You can, if ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(you want to spend the time, create your own group of shell commands to suit how you work. As long as you put ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(them in your .bashrc file, they'll be there everytime you log in. Note that if you frequently log in as root, ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(you might want to copy /home/username/.bashrc to /root/.bashrc to keep yourself sane.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(Resurrecting corrupted floppies\(#5\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
(Here's how to make a floppy disk with "track-0 bad" reusable again:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(If the track zero of a floppy disk is found to be bad, no DOS or Windows utility is going to do anything about) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(it--you just have to throw it in your unrecycle bin.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(This tip cannot recover the data, but can make the disk carry things again, at least for the time being ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
(\(moments of desperation\).) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
(How to:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
(\(A\) Format the disk with Linux. Build a Linux file system \(don't use mformat\). I did this some time before by ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(invoking the makebootdisk command \(in Slakware\) and stopped after the formatting was over. There should be ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(better ways to do it in RedHat 5.2 or other recent versions.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(\( Reformat the disk with Windows. Use the DOS window and the /u option while formatting.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(Using DOS-like commands\(#6\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(There's a package called mtools which is included with most of the distributions out there.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
() Tj
ET
endstream
endobj
11 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 10 0 R
>>
endobj
12 0 obj
<<
/Length 5990
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(There are several commands for basic DOS stuff. For example, to directory the floppy drive, type mdir a:. This) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(is rather handy--you don't need to mount the floppy drive to use it.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(Other commands are: mattrib , mcd, mcopy, mdel, mformat, mlabel, mren \(rename\), mmd, mrd, and mtype.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(This doesn't work for reading from hard disks. In that case, you would add entries to /etc/fstab, drive type ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(msdos for fat16 partitions, and vfat for fat32.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
(Copying files from Linux to Windows 98 or 95B \(FAT32\)\(#7\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(It's as easy as installing the program explore2fs. It uses a Windows Explorer interface and supports ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(drag-and-drop. I have found it reliable and useful for migrating files from my RedHat 6.1 partition to my ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
(Win95B partition quickly and with a minimum of fuss.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(It's available free--as all software should be--from this URL:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(CODE) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(http://uranus.it.swin.edu.au/~jn/linux/explore2fs.htm) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(Installing in partitions\(#8\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(I am using SuSE Linux, which has some interesting options \(I don't know if RedHat or other distributions offer) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(you this, too\).) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(1. You can install Linux on a single file in your Windows Partition. Nice to try it out, but I guess it is not) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
(that fast then. You can load it then with a DOS program, loadlin.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
(2. Use Fips or Partition Magic. Defragment your hard drive \(you should do this for Point 1, too\) and split it ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(up. I guess most users just have one partition, which you should split up into at least three: one for the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(Linux files, and a smaller swap partition \(take about 32 to 64 MB, depending on your RAM--less RAM needs ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
(bigger swap partitions\). If you decide later to deinstall Linux you can always delete both partitions and ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(create one big one for Windows again.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(Fips is a stupid command line program, but if you're too lazy to read at least a little bit, then you should ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(stop thinking about Linux anyway...) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(Command Pipelines\(#9\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
(Pipes are easy. The Unix shells provide mechanisms which you can use them to allow you to generate remarkably ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(sophisticated `programs' out of simple components. We call that a pipeline. A pipeline is composed of a data ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(generator, a series of filters, and a data consumer. Often that final stage is as simple as displaying the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(final output on stdout, and sometimes the first stage is as simple as reading from stdin. I think all shells ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
(use the "|" character to separate each stage of a pipeline. So:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
(data-generator | filter | ... | filter | data-consumer) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
(Each stage of the pipeline runs in parallel, within the limits which the system permits. Hey, look closely, ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
(because that last phrase is important. Are you on a uni-processor system because if you are, then obviously ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
(only one process runs at a time, although that point is simply nitpicking. But pipes are buffers capable of ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(holding only finite data. A process can write into a pipe until that pipe is full. When the pipe is full the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(process writing into it blocks until some of the data already in the pipe has been read. Similarly, a process ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
(can read from a pipe until that pipe is empty. When it's empty the reading process is blocked until some more ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(data has been written into the pipe.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(What is IP masquerading and when is it of use?\(#10\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(IP masquerading is a process where one computer acts as an IP gateway for a network. All computers on the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(network send their IP packets through the gateway, which replaces the source IP address with its own address ) Tj
ET
endstream
endobj
13 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 12 0 R
>>
endobj
14 0 obj
<<
/Length 6103
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(and then forwards it to the internet. Perhaps the source IP port number is also replaced with another port ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(number, although that is less interesting. All hosts on the internet see the packet as originating from the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(gateway.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(Any host on the Internet which wishes to send a packet back, ie in reply, must necessarily address that packet) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(to the gateway. Remember that the gateway is the only host seen on the internet. The gateway rewrites the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(destination address, replacing its own address with the IP address of the machine which is being masqueraded, ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(and forwards that packet on to the local network for delivery.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(This procedure sounds simple, and it is. It provides an effective means by which you can provide second class ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(internet connections for a complete LAN using only one \(internet\) IP address.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(Setting UTC or local time\(#11\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(When Linux boots, one of the initialisation scripts will run the /sbin/hwclock program to copy the current ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(hardware clock time to the system clock. hwclock will assume the hardware clock is set to local time unless it) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(is run with the --utc switch. Rather than editing the startup script, under Red Hat Linux you should edit the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(/etc/sysconfig/clock file and change the ``UTC'' line to either ``UTC=true'' or ``UTC=false'' as appropriate.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(Setting the system clock\(#12\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(To set the system clock under Linux, use the date command. As an example, to set the current time and date to ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(July 31, 11:16pm, type ``date 07312316'' \(note that the time is given in 24 hour notation\). If you wanted to ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(change the year as well, you could type ``date 073123161998''. To set the seconds as well, type ``date ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(07312316.30'' or ``date 073123161998.30''. To see what Linux thinks the current local time is, run date with ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(no arguments.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(Setting the hardware clock\(#13\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
(To set the hardware clock, my favourite way is to set the system clock first, and then set the hardware clock ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(to the current system clock by typing ``/sbin/hwclock --systohc'' \(or ``/sbin/hwclock --systohc --utc'' if you) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(are keeping the hardware clock in UTC\). To see what the hardware clock is currently set to, run hwclock with ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
(no arguments. If the hardware clock is in UTC and you want to see the local equivalent, type ``/sbin/hwclock ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(--utc'') Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(Setting your timezone\(#14\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(The timezone under Linux is set by a symbolic link from /etc/localtime[1] to a file in the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(/usr/share/zoneinfo[2] directory that corresponds with what timezone you are in. For example, since I'm in ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
(South Australia, /etc/localtime is a symlink to /usr/share/zoneinfo/Australia/South. To set this link, type:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(ln -sf ../usr/share/zoneinfo/your/zone /etc/localtime) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
(Replace your/zone with something like Australia/NSW or Australia/Perth. Have a look in the directories under ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(/usr/share/zoneinfo to see what timezones are available.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
([1] This assumes that /usr/share/zoneinfo is linked to /etc/localtime as it is under Red Hat Linux.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
([2] On older systems, you'll find that /usr/lib/zoneinfo is used instead of /usr/share/zoneinfo. See also the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
(later section ``The time in some applications is wrong''.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
(Zombies\(#15\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(What are these zombie processes that show up in ps? I kill them but they don't go away!) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(Zombies are dead processes. You cannot kill the dead. All processes eventually die, and when they do they ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(become zombies. They consume almost no resources, which is to be expected because they are dead! The reason ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(for zombies is so the zombie's parent \(process\) can retrieve the zombie's exit status and resource usage ) Tj
ET
endstream
endobj
15 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 14 0 R
>>
endobj
16 0 obj
<<
/Length 4428
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(statistics. The parent signals the operating system that it no longer needs the zombie by using one of the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(wait\(\) system calls.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(When a process dies, its child processes all become children of process number 1, which is the init process. ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(Init is ``always'' waiting for children to die, so that they don't remain as zombies.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(If you have zombie processes it means those zombies have not been waited for by their parent \(look at PPID ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(displayed by ps -l\). You have three choices: Fix the parent process \(make it wait\); kill the parent; or live ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
(with it. Remember that living with it is not so hard because zombies take up little more than one extra line ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(in the output of ps.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(How do i give users an ftp only account \(no telnet, etc\).\(#16\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(give them shell which doesn't work, but is listed in /etc/shells) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(for example /bin/false...) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(How to do backup with tar?\(#17\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(You can mantain a list of files that you with to backup into a file and tar) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(it when you wish.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(tar czvf tarfile.tar.gz -T list_file) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(where list_file is a simple list of what you want to include into the tar) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(i.e:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
(/etc/smb.conf) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(/root/myfile) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(/etc/ppp \(all files into the /etc/ppp directory\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(/opt/gnome/html/gnome-dev-info.html) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(How to keep a computer from answering to ping?\(#18\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(a simple "echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_all" will do the) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(trick... to turn it back on, simply) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
("echo 0 > /proc/sys/net/ipv4/icmp_echo_ignore_all") Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(Customizing your directory colors.\(#19\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
(I know a lot of you know the command ls --color. Which displays your directory with colors. But, a lot of ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(people may not know that those colors are customizable. All you need to do is add the following line to your ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
(/etc/bashrc file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(eval `dircolors /etc/DIR_COLORS`) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(And then all of the color configuration can be found in the file /etc/DIR_COLORS) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(Frozen Xwindow\(#20\)) Tj
ET
endstream
endobj
17 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 16 0 R
>>
endobj
18 0 obj
<<
/Length 4080
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(If your Xwindow freezes sometimes, here are two ways that you may try to kill your server. The first is the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(simple simple way of killing your X server the key combination: Ctrl+Alt+Backspace) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(The second way is a little more complicated, but it works most of the time. Hit Ctrl+Alt+F2 to startup a ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(virtual console, then log in with your user name and password and run:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
(# ps -ax | grep startx) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(This will give you the PID of your Xserver. Then just kill it with:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(# kill -9 PID_Number) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(To go back to your first console, just hit Alt-F1) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(Converting all files in a directory to lowercase.\(#21\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
(#!/bin/sh) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(# lowerit) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(# convert all file names in the current directory to lower case) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
(# only operates on plain files--does not change the name of directories) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(# will ask for verification before overwriting an existing file) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(for x in `ls`) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(do) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(if [ ! -f $x ]; then) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(continue) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(fi) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
(lc=`echo $x | tr '[A-Z]' '[a-z]'`) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(if [ $lc != $x ]; then) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(mv -i $x $lc) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(fi) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
(done) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
(Wow. That's a long script. I wouldn't write a script to do that; instead, I would use this command:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
(for i in * ; do [ -f $i ] && mv -i $i `echo $i | tr '[A-Z]' '[a-z]'`;) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
(done;) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(on the command line.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
(Script to view those compressed HOWTOs.\(#22\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(From a newbie to another, here is a short script that eases looking for and viewing howto documents. My ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(howto's are in /usr/doc/faq/howto/ and are gzipped. The file names are XXX-HOWTO.gz, XXX being the subject. I ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(created the following script called "howto" in the /usr/local/sbin directory:) Tj
ET
endstream
endobj
19 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 18 0 R
>>
endobj
20 0 obj
<<
/Length 4294
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(#!/bin/sh) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(if [ "$1" = "" ]; then) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(ls /usr/doc/faq/howto | less) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(else) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(gunzip -c /usr/doc/faq/howto/$1-HOWTO.gz | less) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(fi) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
(When called without argument, it displays a directory of the available howto's. Then when entered with the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(first part of the file name \(before the hyphen\) as an argument, it unzips \(keeping the original intact\) then ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(displays the document.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
(For instance, to view the Serial-HOWTO.gz document, enter:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
($ howto Serial) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(Util to clean up your logfiles.\(#23\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(If you're like me, you have a list with 430 subscribers, plus 100+ messages per day coming in over UUCP. Well,) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(what's a hacker to do with these huge logs? Install chklogs, that's what. Chklogs is written by Emilio ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(Grimaldo, grimaldo@panama.iaehv.nl, and the current version 1.8 available from ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(ftp.iaehv.nl:/pub/users/grimaldo/chklogs-1.8.tar.gz. It's pretty self explanatory to install\(you will, of ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(course, check out the info in the doc subdirectory\). Once you've got it installed, add a crontab entry like ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
(this:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
(# Run chklogs at 9:00PM daily.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(00 21 * * * /usr/local/sbin/chklogs -m) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
(Handy Script to Clean Up Corefiles.\(#24\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(Create a file called rmcores\(the author calls it handle-cores\) with the following in it:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(#!/bin/sh) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(USAGE="$0 ") Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(if [ $# != 2 ] ; then) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
(echo $USAGE) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(exit) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(fi) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
(echo Deleting...) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(find $1 -name core -atime 7 -print -type f -exec rm {} \\;) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(echo e-mailing) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
(for name in `find $1 -name core -exec ls -l {} \\; | cut -c16-24`) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
(do) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
(echo $name) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(cat $2 | mail $name) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(done) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(And have a cron job run it every so often.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(Moving directories between filesystems.Quick way to move an entire tree of files from one disk to another ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(\(#25\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(\(cd /source/directory && tar cf - . \) | \(cd /dest/directory && tar xvfp -\)) Tj
ET
endstream
endobj
21 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 20 0 R
>>
endobj
22 0 obj
<<
/Length 4730
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
([ Change from cd /source/directory; tar....etc. to prevent possibility of trashing directory in case of ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(disaster.]) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(Finding out which directories are the largest.Ever wondered which directories are the biggest on your ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(computer? Here's how to find out.\(#26\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(du -S | sort -n) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
(How do I stop my system from fscking on each reboot?\(#27\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(When you rebuild the kernel, the filesystem is marked as 'dirty' and so your disk will be checked with each ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(boot. The fix is to run:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(rdev -R /zImage 1) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(This fixes the kernel so that it is no longer convinced that the filesystem is dirty.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(Note: If using lilo, then add read-only to your linux setup in your lilo config file \(Usually /etc/lilo.conf\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(How to avoid fscks caused by "device busy" at reboot time.\(#28\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(If you often get device busy errors on shutdown that leave the filesystem in need of an fsck upon reboot, here) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(is a simple fix:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(To /etc/rc.d/init.d/halt or /etc/rc.d/rc.0, add the line) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
(mount -o remount,ro /mount.dir) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
(for all your mounted filesystems except /, before the call to umount -a. This means if, for some reason, ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(shutdown fails to kill all processes and umount the disks they will still be clean on reboot. Saves a lot of ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(time at reboot for me.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(How to find the biggest files on your hard-drive.\(#29\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(ls -l | sort +4n) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(Or, for those of you really scrunched for space this takes awhile but works great:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(cd /) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(ls -lR | sort +4n) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
(A script for cleaning up after programs that create autosave and backup files.\(#30\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(Here is a simple two-liner which recursively descends a directory hierarchy removing emacs auto-save \(#\) and ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
(backup \(~\) files, .o files, and TeX .log files. It also compresses .tex files and README files. I call it ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
('squeeze' on my system.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
(#!/bin/sh) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
(#SQUEEZE removes unnecessary files and compresses .tex and README files) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(#By Barry tolnas, tolnas@sun1.engr.utk.edu) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(#) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
(echo squeezing $PWD) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(find $PWD \\\( -name \\*~ -or -name \\*.o -or -name \\*.log -or -name \\*\\#\\\) -exec) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
(rm -f {} \\;) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(find $PWD \\\( -name \\*.tex -or -name \\*README\\* -or -name \\*readme\\* \\\) -exec gzip -9 {} \\;) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(How to find out what process is eating the most memory.\(#31\)) Tj
ET
endstream
endobj
23 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 22 0 R
>>
endobj
24 0 obj
<<
/Length 1552
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(ps -aux | sort +4n) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(-OR-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(ps -aux | sort +5n) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(How do I find which library in /usr/lib holds a certain function?\(#32\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(What if you're compiling and you've missed a library that needed linking in? All gcc reports are function ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(names... Here's a simple command that'll find what you're looking for:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(for i in *; do echo $i:;nm $i|grep tgetnum 2>/dev/null;done) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
(Where tgetnum is the name of the function you're looking for.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(I compiled a small test program in C, but when I run it, I get no output!\(#32\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(You probably compiled the program into a binary named test, didn't you? Linux has a program called test, which) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(tests if a certain condition is true, it never produces any output on the screen. Instead of just typing test,) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(try: ./test) Tj
ET
endstream
endobj
25 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 24 0 R
>>
endobj
26 0 obj
<<
/Type/Catalog
/Pages 2 0 R
>>
endobj
2 0 obj
<<
/Type/Pages
/Kids[
9 0 R
11 0 R
13 0 R
15 0 R
17 0 R
19 0 R
21 0 R
23 0 R
25 0 R
]
/Count 9
/Resources 3 0 R
>>
endobj
3 0 obj
<<
/ProcSet[/PDF/Text/ImageC]
/Font<<
/F0 7 0 R
>>
>>
endobj
xref
0 27
0000000000 65535 f
0000000009 00000 n
0000043154 00000 n
0000043284 00000 n
0000000168 00000 n
0000000168 00000 n
0000001113 00000 n
0000001256 00000 n
0000001421 00000 n
0000005682 00000 n
0000005776 00000 n
0000010796 00000 n
0000010892 00000 n
0000016934 00000 n
0000017030 00000 n
0000023185 00000 n
0000023281 00000 n
0000027761 00000 n
0000027857 00000 n
0000031989 00000 n
0000032085 00000 n
0000036431 00000 n
0000036527 00000 n
0000041309 00000 n
0000041405 00000 n
0000043009 00000 n
0000043105 00000 n
trailer
<<
/Size 27
/Root 26 0 R
/Info 1 0 R
/ID[(424044342ttinprkp)(424044342ttinprkp)]
>>
startxref
43353
%%EOF
