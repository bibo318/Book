%PDF-1.3
1 0 obj
<<
/CreationDate(D:20160204102518)
/Title()
/Author(PDFZilla)
/Keywords(PDFZilla,Zilla PDF)
/Producer(PDFZilla - Zilla TXT To PDF Converter)
>>
endobj
5 0 obj
[
750 750 278 278 355 556 556 889 667 190 333 333 389 584 278 333 
278 278 556 556 556 556 556 556 556 556 556 556 278 278 584 584 
584 556 1015 667 667 722 722 667 610 778 722 278 500 667 556 832 
722 778 667 778 722 667 610 722 667 944 667 667 610 278 278 278 
469 556 333 556 556 500 556 556 278 556 556 222 222 500 222 832 
556 556 556 556 333 500 278 556 500 722 500 500 500 334 260 334 
584 750 556 750 222 556 333 1000 556 556 333 1000 667 333 1000 750 
610 750 750 222 222 333 333 350 556 1000 333 1000 500 333 944 750 
500 667 278 333 556 556 556 556 260 556 333 736 370 556 584 333 
736 552 400 549 333 333 333 576 537 333 333 333 365 556 834 834 
834 610 667 667 667 667 667 667 1000 722 667 667 667 667 278 278 
278 278 722 722 778 778 778 778 778 584 778 722 722 722 722 667 
667 610 556 556 556 556 556 556 889 500 556 556 556 556 278 278 
278 278 556 556 556 556 556 556 556 549 610 556 556 556 556 500 
556 500 
]
endobj
6 0 obj
<<
/Type/FontDescriptor
/FontName/Arial
/Ascent 905
/Descent -212
/ItalicAngle 0
/CapHeight 905
/Flags 32
/FontBBox[0 0 0 0]
>>
endobj
7 0 obj
<<
/Type/Font
/Subtype/TrueType
/Name/F0
/BaseFont/Arial
/Encoding/WinAnsiEncoding
/FirstChar 30
/LastChar 255
/Widths 5 0 R
/FontDescriptor 6 0 R
>>
endobj
8 0 obj
<<
/Length 2426
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(Cluster is an allocation unit. If you create file lets say 1 byte in size, at least one cluster should be ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(allocated on FAT file system. On NTFS if file is small enough, it can be stored in MFT record itself without ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(using additional clusters. When file grows beyond the cluster boundary, another cluster is allocated. It means) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(that the bigger the cluster size, the more disk space is wasted, however, the performance is better.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(So if you have a large hard drive & dont mind wasteing some space, format it with a larger cluster size to ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(gain added performance.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
(The following table shows the default values that Windows NT/2000/XP uses for NTFS formatting:) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(Drive size) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
(\(logical volume\) Cluster size Sectors) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(----------------------------------------------------------) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(512 MB or less 512 bytes 1) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(513 MB - 1,024 MB \(1 GB\) 1,024 bytes \(1 KB\) 2) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(1,025 MB - 2,048 MB \(2 GB\) 2,048 bytes \(2 KB\) 4) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(2,049 MB and larger 4,096 bytes \(4 KB\) 8) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(However, when you format the partition manually, you can specify cluster size 512 bytes, 1 KB, 2 KB, 4 KB, 8 ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(KB, 16 KB, 32 KB, 64 KB in the format dialog box or as a parameter to the command line FORMAT utility.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(The performance comes thew the bursts from the hard drive. by having a larger cluster size you affectivly have) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(a larger chunk of data sent to ram rather than having to read multiple smaller chunks of the same data.) Tj
ET
endstream
endobj
9 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 8 0 R
>>
endobj
10 0 obj
<<
/Type/Catalog
/Pages 2 0 R
>>
endobj
2 0 obj
<<
/Type/Pages
/Kids[
9 0 R
]
/Count 1
/Resources 3 0 R
>>
endobj
3 0 obj
<<
/ProcSet[/PDF/Text/ImageC]
/Font<<
/F0 7 0 R
>>
>>
endobj
xref
0 11
0000000000 65535 f
0000000009 00000 n
0000004041 00000 n
0000004115 00000 n
0000000168 00000 n
0000000168 00000 n
0000001113 00000 n
0000001256 00000 n
0000001421 00000 n
0000003898 00000 n
0000003992 00000 n
trailer
<<
/Size 11
/Root 10 0 R
/Info 1 0 R
/ID[(424044342tttueSebtrreeoaed)(424044342tttueSebtrreeoaed)]
>>
startxref
4184
%%EOF
