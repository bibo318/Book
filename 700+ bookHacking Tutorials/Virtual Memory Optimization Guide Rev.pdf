%PDF-1.3
1 0 obj
<<
/CreationDate(D:20160204102527)
/Title()
/Author(PDFZilla)
/Keywords(PDFZilla,Zilla PDF)
/Producer(PDFZilla - Zilla TXT To PDF Converter)
>>
endobj
5 0 obj
[
750 750 278 278 355 556 556 889 667 190 333 333 389 584 278 333 
278 278 556 556 556 556 556 556 556 556 556 556 278 278 584 584 
584 556 1015 667 667 722 722 667 610 778 722 278 500 667 556 832 
722 778 667 778 722 667 610 722 667 944 667 667 610 278 278 278 
469 556 333 556 556 500 556 556 278 556 556 222 222 500 222 832 
556 556 556 556 333 500 278 556 500 722 500 500 500 334 260 334 
584 750 556 750 222 556 333 1000 556 556 333 1000 667 333 1000 750 
610 750 750 222 222 333 333 350 556 1000 333 1000 500 333 944 750 
500 667 278 333 556 556 556 556 260 556 333 736 370 556 584 333 
736 552 400 549 333 333 333 576 537 333 333 333 365 556 834 834 
834 610 667 667 667 667 667 667 1000 722 667 667 667 667 278 278 
278 278 722 722 778 778 778 778 778 584 778 722 722 722 722 667 
667 610 556 556 556 556 556 556 889 500 556 556 556 556 278 278 
278 278 556 556 556 556 556 556 556 549 610 556 556 556 556 500 
556 500 
]
endobj
6 0 obj
<<
/Type/FontDescriptor
/FontName/Arial
/Ascent 905
/Descent -212
/ItalicAngle 0
/CapHeight 905
/Flags 32
/FontBBox[0 0 0 0]
>>
endobj
7 0 obj
<<
/Type/Font
/Subtype/TrueType
/Name/F0
/BaseFont/Arial
/Encoding/WinAnsiEncoding
/FirstChar 30
/LastChar 255
/Widths 5 0 R
/FontDescriptor 6 0 R
>>
endobj
8 0 obj
<<
/Length 5909
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(Virtual Memory Optimization Guide Rev. 4.0 - Final) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(Virtual Memory) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(Back in the 'good old days' of command prompts and 1.2MB floppy disks, programs needed very little RAM to run ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(because the main \(and almost universal\) operating system was Microsoft DOS and its memory footprint was small.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(That was truly fortunate because RAM at that time was horrendously expensive. Although it may seem ludicrous, ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(4MB of RAM was considered then to be an incredible amount of memory.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(However when Windows became more and more popular, 4MB was just not enough. Due to its GUI \(Graphical User ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(Interface\), it had a larger memory footprint than DOS. Thus, more RAM was needed.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(Unfortunately, RAM prices did not decrease as fast as RAM requirement had increased. This meant that Windows ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(users had to either fork out a fortune for more RAM or run only simple programs. Neither were attractive ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(options. An alternative method was needed to alleviate this problem.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(The solution they came up with was to use some space on the hard disk as extra RAM. Although the hard disk is ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(much slower than RAM, it is also much cheaper and users always have a lot more hard disk space than RAM. So, ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(Windows was designed to create this pseudo-RAM or in Microsoft's terms - Virtual Memory, to make up for the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(shortfall in RAM when running memory-intensive programs.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
( ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
(How Does It Work?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
(Virtual memory is created using a special file called a swapfile or paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(Whenever the operating system has enough memory, it doesn't usually use virtual memory. But if it runs out of ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
(memory, the operating system will page out the least recently used data in the memory to the swapfile in the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(hard disk. This frees up some memory for your applications. The operating system will continuously do this as ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(more and more data is loaded into the RAM.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(However, when any data stored in the swapfile is needed, it is swapped with the least recently used data in ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(the memory. This allows the swapfile to behave like RAM although programs cannot run directly off it. You will) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(also note that because the operating system cannot directly run programs off the swapfile, some programs may ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
(not run even with a large swapfile if you have too little RAM.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(Swapfile Vs. Paging File) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(We have all been using the terms swapfile and paging file interchangeably. Even Microsoft invariably refers to) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
(the paging file as the swapfile and vice versa. However, the swapfile and paging file are two different ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(entities. Although both are used to create virtual memory, there are subtle differences between the two.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
(The main difference lies in their names. Swapfiles operate by swapping entire processes from system memory ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
(into the swapfile. This immediately frees up memory for other applications to use.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(In contrast, paging files function by moving "pages" of a program from system memory into the paging file. ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
(These pages are 4KB in size. The entire program does not get swapped wholesale into the paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
(While swapping occurs when there is heavy demand on the system memory, paging can occur preemptively. This ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(means that the operating system can page out parts of a program when it is minimized or left idle for some ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(time. The memory used by the paged-out portions are not immediately released for use by other applications. ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(Instead, they are kept on standby.) Tj
ET
endstream
endobj
9 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 8 0 R
>>
endobj
10 0 obj
<<
/Length 5615
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(If the paged-out application is reactivated, it can instantly access the paged-out parts \(which are still ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(stored in system memory\). But if another application requests for the memory space, then the system memory ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(held by the paged-out data is released for its use. As you can see, this is really quite different from the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(way a swapfile works.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(Swapfiles were used in old iterations of Microsoft Windows, prior to Windows 95. From Windows 95 onwards, all ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(Windows versions use only paging files. Therefore, the correct term for the file used to create virtual memory) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
(in current operating systems is paging file, not swapfile.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(Because both swapfiles and paging files do the same thing - create virtual memory, people will always refer to) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
(swapfiles and paging files interchangeably. Let's just keep in mind their innate differences.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(Do We Still Need A Paging File?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(Even today, when the average home user's computer comes with at least 256MB of RAM, the paging file is still ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(very important. While the large amount of RAM in the average user's computer makes the risk of memory shortage) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(much less of a worry with single applications now than it was back then; the paging file is essential when ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(multi-tasking.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(Note that over the years, the emphasis has changed to multi-tasking. No longer will people be solely stuck to ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(using one application at a time. In fact, it is common to have 10 or more applications running simultaneously!) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(For example, I normally have the following applications running at the same time :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(                + Microsoft Outlook) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(                + Internet browsers like Maxthon and Firefox) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
(                + An FTP client) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(                + Instant messengers like Trillian and MSN Messenger) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(                + A download manager like FlashGet) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(                + Macromedia Dreamweaver) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(                + P2P clients like ShareAza) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(                + An antivirus software) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(                + Adobe Acrobat Reader with a few PDF documents opened) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(That's a total of 10-12 applications running simultaneously!) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(Even with 256MB of RAM, it would be impossible to load everything into memory. A paging file is needed to ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
(store the least used data in the memory so that I can open up all those applications I need. And let's not ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(forget the disk cache.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(Operating systems like Windows 98 and Windows XP allocate a sizeable portion of the RAM to the disk cache. ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
(This speeds up accesses to hard disk data by caching the most frequently used as well as data that are most ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
(likely to be accessed next by the computer. This cuts down on the amount of available RAM. So, without a ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
(paging file, you won't be able to open many applications even if your computer has 256MB of RAM.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(Finally, some programs require the use of a paging file to function properly. It may be to store sensitive ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
(data on something less volatile than the RAM or to ensure the computer will have sufficient memory to run it. ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(But whatever the reasons, a paging file is needed in order for these programs to run.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(Why Optimize The Paging File?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
() Tj
ET
endstream
endobj
11 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 10 0 R
>>
endobj
12 0 obj
<<
/Length 5515
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(Unless your computer is truly loaded with RAM, it will almost always use the paging file. As such, its ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(performance affects the performance of the whole computer.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(Now, using a paging file may sound like a really cheap way to run memory intensive programs without the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(expense of buying more RAM. However, even the fastest hard disk is more than an order of magnitude slower than) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(the slowest RAM.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(Even the fastest hard disk is currently over 70X slower than the dual-channel PC2700 DDR memory common in many) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
(computers. Let's not even start comparing the hard disk with faster RAM solutions like PC3200 DDR memory or ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(PC2-4200 DDR2 memory.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
(So, paging file is only a stopgap solution for the lack of sufficient RAM. As long as you use the paging file,) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(there will always be performance degradation. The ideal solution for insufficient RAM is always more RAM, not ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(more Virtual Memory. But since we can't afford all the RAM we want, a paging file is necessary for us to run ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(today's memory guzzling programs.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(As you can tell, more isn't better for the paging file because more paging file space will only give you the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(ability to run more memory intensive programs at once. It will not speed up your system. But what we can do is) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(to optimize the paging file so that the performance degradation when using it is minimized.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
( ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(So How Do We Optimize The Paging File?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(There have been many theories on how to optimize the paging file. The most important ones are listed below :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(                + Making the paging file contiguous.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(                + Moving the paging file to the outer tracks of the hard disk.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
(                + Creating a huge paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(                + Moving the paging file to a different partition in the same hard disk.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(                + Moving the paging file to a different hard disk.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(                + Creating multiple paging files) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(                + Moving the paging file to a RAID array) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(                + Moving the paging file to a RAM drive) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(                + Reducing reliance on virtual memory) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(We will examine those methods and see what will work and what won't.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(Virtual Memory Then And Now) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(Windows 3.1) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(Back in the good old days of DOS 6.22 and Windows 3.1, everyone knew that creating a permanent swapfile was ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
(the key to optimal swapfile performance. This was because Windows 3.1 only creates permanent swapfiles that ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
(are contiguous.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(A contiguous swapfile is a swapfile that consists of an uninterrupted block of hard disk space. When a ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(swapfile is contiguous, the read-write heads of the hard disk can read and write data on the swapfile in a ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
(continuous fashion.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
(In Windows 3.1, if the swapfile was set up as a temporary swapfile which is created every time Windows 3.1 ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(boots up, it will end up at the end of the hard disk and fragmented too. So, every time the swapfile is read ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(from or written to, the hard disk heads have to seek all over the platters to conduct those operations.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
() Tj
ET
endstream
endobj
13 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 12 0 R
>>
endobj
14 0 obj
<<
/Length 5895
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(Needless to say, this greatly erodes the performance of the swapfile. That's why it was important to make the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(swapfile permanent in Windows 3.1 - so that the swapfile will become contiguous.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
( ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(Windows 95 And Above) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(From Windows 95 onwards, Microsoft encouraged the use of its new dynamic virtual memory system. Of course, ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
(there is nothing new about the virtual memory part but the keyword in this new technique is dynamic.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(The new dynamic virtual memory system no longer relies on a fixed-size swapfile but a paging file that ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
(dynamically resizes itself according to need. When the computer runs out of memory, more memory is created by ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(increasing the size of the paging file. Once the virtual memory is freed up, theoretically the paging file ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(diminishes in size.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(Microsoft claims that while its dynamic virtual memory system will create a fragmented paging file, it is ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(still faster than Windows 3.1's static virtual memory system. As a bonus, no hard disk space will be tied up ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(in a permanent paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(However, this dynamic virtual memory system does have a big disadvantage - it cannot be moved to the outer ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(tracks of the hard disk platters. ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(Dynamic Paging Files And Data Locality) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(There are people who assert that when left alone, Windows XP will actually create virtual memory pages in ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
(close proximity to frequently-used data in the hard disk, like documents. In other words, they claim that ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(Windows XP monitors disk usage, maintains a database of frequently-used files in the hard disk and uses that ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(information to create the paging file based on spatial locality.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(With virtual memory pages created close to frequently-used data, this apparently allows shorter seeks between ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(frequently-used data and the paging file. That is the premise behind their theory of letting Windows XP handle) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(the paging file dynamically. However, I don't think this is true at all.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(First of all, while Windows XP does monitor disk usage and maintain a database of frequently-used files, only ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(disk defragmenting utilities use that database. The built-in Disk Defragmenter, as well as third-party disk ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
(defragmenting utilities, use this database to rearrange the hard disk so that frequently-used data.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(But as far as I'm aware, the paging file does not arrange the location of the pages according to this ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(database. From my observations, Windows XP simply uses the nearest available clusters for the dynamic paging ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
(file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
(In fact, Microsoft states that if you create multiple paging files, Windows XP will favour the partition that ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(is least active. This completely refutes the theory of virtual memory pages being allocated according to ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
(spatial locality. Here is a quote from Microsoft's Knowledge Base.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
(            By design, Windows uses the paging file on the less frequently accessed partition over the paging ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(file on the more heavily accessed boot partition. An internal algorithm is used to determine which paging file) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(to use for virtual memory management.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(In any case, it doesn't make sense for Windows XP to create the paging file based on spatial locality to work ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
(files like your documents. Once opened, Windows keeps the working copy in the Temp folder, not your paging ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(In addition, let us remember that Windows pre-emptively pages out pageable parts of an application in system ) Tj
ET
endstream
endobj
15 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 14 0 R
>>
endobj
16 0 obj
<<
/Length 5227
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(memory. Windows does not directly load data from the hard disk into the paging file. Therefore, creating ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(virtual memory pages close to frequently-used files will not help at all.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(Fragmented Vs. Contiguous) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(Even though Microsoft asserts that the new dynamic virtual memory system does not benefit much from a ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(contiguous paging file, the fact is maintaining a contiguous paging file will definitely improve the paging ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(file's performance.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(A contiguous paging file eliminates the need for the hard disk heads to seek all over the platters while ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(accessing the paging file. The following pictures illustrate my points.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(This shows a fragmented paging file \(brown\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(This shows a contiguous paging file \(brown\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(See how a contiguous paging file differs from a fragmented paging file? Instead of seeking and reading from a ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(continuous block of hard disk space in the case of a contiguous paging file, the hard disk heads have to seek ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(all over the platters to access the clusters allocated to a fragmented paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(As a result, a common operating pattern like the following may emerge :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(Fragmented : seek-read-read-seek-read-seek-read-read-read-seek-read-read-seek) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
(Contiguous : seek-read-read-read-read-read-read-seek-read-read-read-read-read) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(Of course, the amount of time needed to do the seek operation is different from the time needed to read a ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
(block of data off the paging file but the logic remains.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(A contiguous paging file allows data to be read with minimal amount of seeks. If the number of seeks can be ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(reduced while accessing the paging file, then more data can be read in less time. This is the premise behind a) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(contiguous paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(How Do We Create A Contiguous Paging File?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(Now that we agree that making the paging file contiguous will greatly improve its performance, let's figure ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(out how to make it contiguous.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
( ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
(Using A Permanent Paging File) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
(Yes, I know. You are all thinking, "Simple! Just make the paging file permanent!") Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
(True, creating a permanent paging file is usually the way to create a contiguous paging file. A permanent ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(paging file ensures that the paging file will remain in one single block. However, creating a permanent paging) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(file does not mean the paging file will automatically become contiguous.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(That may have been true in Windows 3.1 but believe it or not, Windows XP does not force the creation of a ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
(contiguous paging file when you make the paging file permanent!) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(When you create a permanent paging file, Windows XP automatically uses the nearest \(to the outer tracks\) ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(sectors to create the paging file. This creates a permanent but fragmented paging file. Naturally, this ) Tj
ET
endstream
endobj
17 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 16 0 R
>>
endobj
18 0 obj
<<
/Length 5517
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(reduces the performance of the paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(But that's not the end of the world. To avoid this problem, defragment your hard disk before creating the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(permanent paging file. That will create a contiguous area for Windows XP to create a permanent paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
( ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(Using A Dynamic Paging File) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(But making a permanent paging file is not the only way to create a contiguous paging file. You can also create) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(a contiguous paging file that is also dynamic in nature!) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(All you need to do is create a separate partition for the paging file. This allows the paging file a ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(contiguous space on the hard disk to freely expand according to usage.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(At first glance, the benefits of this method seem obvious. It ensures the paging file is always contiguous and) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(yet have the ability to expand when the need arises. However, this method is really not very desirable when ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(you examine it closely.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(The main reason for using a dynamic paging file is to save hard disk space by using it only when there is a ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(need for more virtual memory. But creating a partition to allow the paging file to dynamically resize is ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(really defeating the purpose.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
(The size of the partition limits the maximum size that the dynamic paging file can expand to and you cannot ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(use the partition to store anything else because that would interfere with its contiguity. If you create a big) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
(partition, that wastes hard disk space. If you create a small partition, that limits how big the paging file ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(can expand. Therefore, this method is self-defeating.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(What About A Semi-Permanent Paging File?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(Although everyone knows about dynamic and permanent paging files, there is a third type of paging file - a ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(semi-permanent paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(A semi-permanent paging file theoretically allows you to receive the performance benefits of a contiguous ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
(permanent paging file without its main disadvantage - the need to predetermine an optimal size. But what is a ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(semi-permanent paging file?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(Well, a semi-permanent paging file is a combination of a permanent paging file and a dynamic paging file. It ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
(consists of a permanent part and a dynamic part. The permanent part of this paging file behaves exactly like a) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(permanent paging file. It will not change in size and can thus be moved to the outer tracks of the hard disk.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(The dynamic part, however, does not normally appear. In fact, it is only created when the permanent part of ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
(the semi-permanent paging file is unable to cope with increased memory requirements.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
(Once created, it dynamically resizes itself to suit the current paging file requirements. Just like the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(dynamic paging file, it will use any free space on the hard disk so it will be fragmented.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
( ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
(The Advantages Of A Semi-Permanent Paging File) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(The semi-permanent paging file offers the advantage of never running out of virtual memory. That means even if) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(the permanent part cannot handle the memory load, the application won't halt with an "Out of memory" error ) Tj
ET
endstream
endobj
19 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 18 0 R
>>
endobj
20 0 obj
<<
/Length 6199
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(message. The dynamic part will come into action and provide the extra virtual memory required by the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(application.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(With a permanent paging file, the application will just halt with the error message and you would have to ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(close one or more applications to free up more memory. However, this is only true for older versions of ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(Windows.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(Newer iterations of Windows like Windows XP do not have a true permanent paging file. Even if you set a ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
(permanent paging file, Windows XP will automatically generate more virtual memory when it runs out of memory; ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(by adding a dynamic component to the permanent paging file. In short, when you create a "permanent" paging ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(file in Windows XP, you are actually creating a semi-permanent paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(The advantage of creating your own semi-permanent paging file, instead of a "permanent" paging file in Windows) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(XP is that you get to avoid the warning message that appears whenever Windows XP runs out of memory and has to) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(create more virtual memory by adding a dynamic component to the permanent paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(The Disdvantages Of A Semi-Permanent Paging File) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(Unfortunately, a semi-permanent paging file is a double-edged sword. With a dynamic component, it is ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(inevitable that a dynamic paging file's disadvantages would also be applicable to it.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(As mentioned earlier, the dynamic part will use any available space on the hard disk. This inevitably means ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
(the dynamic part of the semi-permanent paging file will always be fragmented. Naturally, the performance of ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(the paging file deteriorates whenever the dynamic part comes into action.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(But just how bad could be the deterioration be? Let's take a look at the disk map below which shows a ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(semi-permanent paging file with both permanent and dynamic components in brown :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(This shows a semi-permanent paging file \(brown\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(You will notice that the paging file is split into two parts. The permanent part is at the outer tracks of the) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(hard disk in one contiguous block. The lower, fragmented blocks of paging file are the dynamic part of the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(semi-permanent paging file. As the paging file requirement exceeds what the permanent part can provide, the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
(dynamic part of the semi-permanent paging file will dynamically convert available hard disk space \(which is ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(usually on the inner tracks on the hard disk\) into virtual memory.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(Because the paging file's two components are at opposite ends of the hard disk, the hard disk heads will have ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
(to seek up and down the platters while servicing the paging file! Needless to say, that greatly degrades the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(performance of the paging file. The head seeks required to service a dynamic paging file are already bad ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
(enough. The amount of head seeks required to service both the permanent part and the fragmented dynamic part ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(will definitely put a big dent on the paging file's performance.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
(Permanent Or Semi-Permanent?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(Performance-wise, both a permanent and a semi-permanent paging file will perform equally, if the virtual ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(memory requirement does not exceed what the permanent component of the semi-permanent paging file can provide.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
(As the dynamic part comes into play, the semi-permanent paging file gradually loses its performance advantage ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(over the dynamic paging file. Eventually, it may even become slower than a dynamic paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(The only way around this is to ensure that the permanent part of the semi-permanent paging file is enough to ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(meet your usual virtual memory requirements. Do not look at the semi-permanent paging file as a way to save ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(hard disk space. Instead, think of it as a permanent paging file with a backup capacity for dynamic expansion ) Tj
ET
endstream
endobj
21 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 20 0 R
>>
endobj
22 0 obj
<<
/Length 5639
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(in emergencies!) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(Hard disk space is no longer that much of a premium as it was back in the old days. With desktop hard disks ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(approaching half a terabyte in size, allocating a few hundred megabytes or even a gigabyte or so for the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(paging file isn't going to break anyone's heart. The performance of the paging file, especially in systems ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(with very little RAM or for people who multitask a lot, is definitely more important than saving a few hundred) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(megabytes of hard disk space.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
(Is Writing And Rewriting To The Same Area Dangerous?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(Creating a permanent or semi-permanent paging file inevitably causes numerous writes and rewrites of ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
(information in the same fixed area of the hard disk platters. Compared to other areas of the hard disk, the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(space allocated to the paging file will be the area where data is most often written, deleted and replaced ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(with newer data.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(Some users have expressed concern over this fact. Will the platter media in that area get worn out after ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(continuous use? Like the magnetic cassettes that we used to record our favourite songs? Will bad sectors form ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(in that area like the floppy disks that have been written to once too often?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(Well, unlike magnetic cassettes or floppy disks, there is actually no contact between the hard disk read-write) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(heads with the platters. The read-write heads actually fly over the platters on a thin cushion of air. In ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(fact, at the high speed that the platters are spinning at, any contact between a read-write head with a ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(platter would have resulted in a head crash, with disastrous consequences.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(Therefore, friction isn't the concern here. What about the effect of changing the magnetic properties of the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
(media during the write process? Will the magnetic properties of the media deteriorate after too many of such ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(changes? Or in the context of this article, will creating a permanent paging file damage the drive in the long) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(run and reduce its MTBF \(Mean Time Between Failures\)?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(To obtain a definitive answer to these questions, I contacted IBM and Seagate. Let's see what their technical ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(experts have to say.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(            Seagate) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(            This should not hurt the drive at all. As you are aware, the heads are actually suspended above ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
(the platters on an air bearing, so there is no direct contact with the media. As far as the recording and ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(re-recording of the same tracks, also no problems. What we are dealing with here in order to write the data is) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(simply moving the magnetic domain one way or the other, no wear involved.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
(            Regards,) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
(            Bob) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(            Seagate Tech Support) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
( ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(            IBM) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
(            Remember, the heads truly fly above the media. The wear and tear factor only becomes an issue for ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(bearings \(heat\) and physical damage to the media if the drive is shocked during operation. Performance is best) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
(at the outer tracks of the drive, so any recurring access directed there will benefit you in performance. ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(Writing and rewriting data to a drive is good in that it remagnetizes \(refreshes\) the area every time it is ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(written.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
() Tj
ET
endstream
endobj
23 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 22 0 R
>>
endobj
24 0 obj
<<
/Length 5269
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(            To answer your question: Your swap file will not affect the MTBF of your drive.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(            Don Gardner) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(            IBM Hard Disk Technical Support/SIT Lab) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
( ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(So, Are Multiple Writes To The Same Area Good?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(Well, it appears to be so. From what Don Gardner said, I gather that the signal carried by the media weakens ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(with time and rewriting it refreshes and strengthens the signal strength of the data carried by the media.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(I guess that pretty much answers our questions. Creating a permanent or semi-permanent paging file won't harm ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(your drive. In fact, it might even be good for your data!) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(Creating A Permanent Paging File In Windows 9x) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(Luckily, Microsoft gave us a relatively painless way to create a permanent paging file though the proper ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(directions were not included. Fear not however. This is what guides like this are for.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(First, open up System Properties, either through the Control Panel or by right-clicking on the My Computer ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(icon and selecting Properties. Once in System Properties, click on the Performance tab and you'll see the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
(following picture :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
(Right at the bottom, you'll see a Virtual Memory... button. Click on it to get the following screen :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(By default, it is set to Let Windows manage my virtual memory settings. \(Recommended\). Ignore the Recommended ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
(label and select Let me specify my own virtual memory settings.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(Now, you will be allowed to choose the partition you wish to place the paging file in. We will touch on this ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(later.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(Next up is the minimum and maximum values for the paging file. To create a permanent paging file, both values ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(must be the same. You would think that Microsoft could at least post a notice about that.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(Please note that Windows 95/98 will not automatically add a dynamic component to a permanent paging file. If ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(you run out of memory with a permanent paging file, it will halt the application and generate the "Out of ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(memory" error message.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(Naturally, you will have to decide on a size for the paging file. We will be discussing this later in the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
(guide but in this example, we will use an arbitrary value of 150MB. Once you set the two values, click on OK ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(and then let Windows 95/98 reboot the system. A permanent paging file will be created on your hard disk.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
(For the curious, do not click on Disable virtual memory. \(Not recommended\) because that will force Windows ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
(95/98 to use only physical RAM.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(Creating A Semi-Permanent Paging File In Windows 9x) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(Creating a semi-permanent paging file is rather similar to creating a permanent paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(First, open up System Properties, either through the Control Panel or by right-clicking on the My Computer ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(icon and selecting Properties.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
() Tj
ET
endstream
endobj
25 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 24 0 R
>>
endobj
26 0 obj
<<
/Length 5652
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(Once in System Properties, click on the Performance tab and you'll see the following picture :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(Right at the bottom, you'll see a Virtual Memory... button. Click on it to get the following screen :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(By default, it is set to Let Windows manage my virtual memory settings. \(Recommended\). Ignore the Recommended ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(label and select Let me specify my own virtual memory settings.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(Now, you will be allowed to choose the partition you wish to place the paging file in. We will touch on this ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
(later.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(To create a semi-permanent paging file, you will need to set both the minimum and maximum values. They must ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
(not be the same. If they are the same values, then the paging file becomes a permanent paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(The minimum value determines the size of the permanent component of the semi-permanent paging file. The ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(maximum value determines the maximum size of the paging file \(both permanent and dynamic components\) and thus ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(limits how much the dynamic component can expand.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(In the example above, Windows 98 will create a permanent paging file of 150MB when it starts up. But if the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(paging file cannot meet the memory demands of the computer, it will dynamically expand the paging file, up to ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(a maximum of 6692MB.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(It is highly recommended that you create a large permanent component that will meet all of your usual memory ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(needs. Use the dynamic component as a backup for emergencies.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(Once you set the two values, click on OK and then let Windows 95/98 reboot the system. A permanent paging file) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
(will be created on your hard disk. Please note that the dynamic component of the paging file will only become ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(active after the system's virtual memory requirements exceed the minimum value.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
(For the curious, do not click on Disable virtual memory. \(Not recommended\) because that will force Windows ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(95/98 to use only physical RAM.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(Creating A Permanent Paging File In Windows 2000) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(In Windows 2000, it takes a little bit more digging to get where you want.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
(First, open up System Properties, either through the Control Panel or by right-clicking on the My Computer ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(icon and selecting Properties.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(Once in System Properties, click on the Advanced tab. There will be three options. Click on Performance ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
(Options... and you'll see the following picture :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
(The second section you see is titled Virtual Memory. Under it, there's a Change... button. Click on it to get ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(the following screen :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
(By default, there won't be any values set for both the Initial size \(MB\) and the Maximum size \(MB\) options.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(You can select the partition you wish to place the paging file in by clicking on the list of partitions shown ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(on the screen. Again, the selection of partition will be discussed in detail later in this article.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(To create a permanent paging file, both values for the Initial size and the Maximum size must be the same.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(Please note that Windows 2000 will not automatically add a dynamic component to a permanent paging file. If ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(you run out of memory with a permanent paging file, it will halt the application and generate the "Out of ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(memory" error message.) Tj
ET
endstream
endobj
27 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 26 0 R
>>
endobj
28 0 obj
<<
/Length 5521
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(Naturally, you will have to decide on a size for the paging file. We will be discussing this later in this ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(article but for now, we will use an arbitrary value of 150MB. Once you set the two values, click on OK and ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(then let Windows 2000 reboot the system. A permanent paging file will be created on your hard disk.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(You will note that Windows 2000 does not allow a paging file size of less than 2MB.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(Creating A Semi-Permanent Paging File In Windows 2000) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(Again, it's almost similar to creating a permanent paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
(First, open up System Properties, either through the Control Panel or by right-clicking on the My Computer ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(icon and selecting Properties.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(Once in System Properties, click on the Advanced tab. There will be three options. Click on Performance ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(Options... and you'll see the following picture :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(The second section you see is titled Virtual Memory. Under it, there's a Change... button. Click on it to get ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(the following screen :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(By default, there won't be any values set for both the Initial size \(MB\) and the Maximum size \(MB\) options.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(You can select the logical drive you wish to place the paging file in by clicking on the list of logical ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
(drives shown on the screen. Again, the selection of logical drives will be discussed in detail later in this ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(article.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(To create a semi-permanent paging file, you will need to set both the minimum and maximum values. They must ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(not be the same. If they are the same values, then the paging file becomes a permanent paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(The minimum value determines the size of the permanent component of the semi-permanent paging file. The ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(maximum value determines the maximum size of the paging file \(both permanent and dynamic components\) and thus ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(limits how much the dynamic component can expand.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(In the example above, Windows 2000 will create a permanent paging file of 150MB when it starts up. But if the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(paging file cannot meet the memory demands of the computer, it will dynamically expand the paging file, up to ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
(a maximum of 1422MB.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(It is highly recommended that you create a large permanent component that will meet all of your usual memory ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(needs. Use the dynamic component as a backup for emergencies.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(Once you set the two values, click on OK and then let Windows 2000 reboot the system. A permanent paging file ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
(will be created on your hard disk. Please note that the dynamic component of the paging file will only become ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(active after the system's virtual memory requirements exceed the minimum value.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
(You will note that Windows 2000 does not allow a paging file size of less than 2MB.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(Creating A Permanent Paging File In Windows XP) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
(Like in Windows 2000, it takes a little digging in Windows XP to get where you want.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
(First, open up System Properties, either through the Control Panel or by right-clicking on the My Computer ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(icon and selecting Properties.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(Once in System Properties, click on the Advanced tab. There will be three sections.) Tj
ET
endstream
endobj
29 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 28 0 R
>>
endobj
30 0 obj
<<
/Length 5556
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(Click on Settings in the Performance section and the Performance Options screen will pop up. Click on the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(Advanced tab and you'll see the following picture :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(The second section you see is titled Virtual memory. Under it, there's a Change button. Click on it to get the) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(following screen :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(You can select the logical drive you wish to place the paging file in by clicking on the list of logical ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
(drives shown on the screen. Again, the selection of logical drives will be discussed in detail later in this ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(article.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
(To create a permanent paging file, both values for the Initial size and the Maximum size must be the same.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(Please note that Windows XP will dynamically expand the paging file when you run out of memory, even if you ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(create a permanent paging file. When this happens, you will get an error message telling you that Windows XP ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(is trying to expand the paging file to create more virtual memory.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(In this example, we are using an arbitrary value of 512MB. Once you set the two values, click on OK and then ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(let Windows XP reboot the system. A permanent paging file will be created on your hard disk.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(You will note that Windows XP does not allow a paging file size of less than 2MB.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(Creating A Semi-Permanent Paging File In Windows XP) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(Creating a semi-permanent paging file is rather similar to creating a permanent paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(First, open up System Properties, either through the Control Panel or by right-clicking on the My Computer ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(icon and selecting Properties.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(Once in System Properties, click on the Advanced tab. There will be three sections.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(Click on Settings in the Performance section and the Performance Options screen will pop up. Click on the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(Advanced tab and you'll see the following picture :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(The second section you see is titled Virtual memory. Under it, there's a Change button. Click on it to get the) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
(following screen :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(You can select the partition you wish to place the paging file in by clicking on the list of partitions shown ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(on the screen. Again, the selection of partition will be discussed in detail later in this article.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(To create a semi-permanent paging file, you will need to set both the minimum and maximum values. They must ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
(not be the same. If they are the same values, then the paging file becomes a permanent paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
(The minimum value determines the size of the permanent component of the semi-permanent paging file. The ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
(maximum value determines the maximum size of the paging file \(both permanent and dynamic components\) and thus ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
(limits how much the dynamic component can expand.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(In the example above, Windows XP will create a permanent paging file of 512MB when it starts up. But if the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
(paging file cannot meet the memory demands of the computer, it will dynamically expand the paging file, up to ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(a maximum of 768MB.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(It is highly recommended that you create a large permanent component that will meet all of your usual memory ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(needs. Use the dynamic component as a backup for emergencies.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
() Tj
ET
endstream
endobj
31 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 30 0 R
>>
endobj
32 0 obj
<<
/Length 5483
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(Once you set the two values, click on OK and then let Windows XP reboot the system. A permanent paging file ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(will be created on your hard disk. Please note that the dynamic component of the paging file will only become ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(active after the system's virtual memory requirements exceed the minimum value.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(You will note that Windows XP does not allow a paging file size of less than 2MB.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(Making The Paging File Contiguous) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
(After creating a permanent or semi-permanent paging file, check and make sure it is contiguous. You can ensure) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(it is contiguous by defragmenting the hard disk before you creating the permanent or semi-permanent paging ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(file. However, that does not always work.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(In such cases, you will need to defragment the paging file after it is created. Unfortunately, Windows XP's ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(Defrag utility does not have the ability to defragment the paging file. You will have to use a third-party ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(defragmentation utility to do this. I will use Diskeeper as an example.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(Windows NT, 2000 and XP does not allow the paging file to be defragmented while it is in used. Therefore, you ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(must set Diskeeper to move the paging file during the next reboot.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(Run Diskeeper and click on Change your settings to expand its menu. You will see the screen below.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(Look for and click on Set a boot-time defragmentation. That will display this screen.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
(Now, select the partition where the paging file resides and tick the checkbox of Defragment the paging file ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(option. The option will be grayed out if there is no paging file in that partition.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(Then click OK and reboot the computer. Diskeeper will load up during the boot process and defragment the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(Once Diskeeper has completed its operation, Windows XP will boot up and start using the newly optimized paging) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(file that is contiguous.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(Please note that Diskeeper requires a certain amount of free space to defragment the paging file. If you do ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(not have the necessary amount of free space in that partition, then Diskeeper may not defragment the paging ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(Wanna Do It For Free?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(You can easily do this for free. Just download a trial copy of Diskeeper!) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(Moving The Paging File To The Outer Tracks) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(Moving the paging file to the outer tracks is a powerful way of increasing paging file performance. In fact, ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
(it will give the paging file a bigger boost in performance than just making it contiguous. Why is that?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
(Check out this transfer rate graph of a hard disk :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(It shows pretty clearly the transfer rate of a hard disk is highest on the outer tracks and lowest on the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
(inner tracks. In this case, the transfer rate of the inner tracks is only about half the transfer rate of the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(outer tracks.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(The areal density of a hard disk's platters and its spin rate are constant. But the linear velocity at each ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(point of the platter isn't constant. Therefore, the performance of the paging file depends on where it is ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(located on the hard disk.) Tj
ET
endstream
endobj
33 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 32 0 R
>>
endobj
34 0 obj
<<
/Length 5878
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(The time taken for the hard disk head to read from point A to point B is exactly the same as the time taken ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(for the head to read from C to D. But because the areal density of the platter is constant, a lot more data ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(can be read from the outer tracks than from the inner tracks, in the same amount of time.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(Now that the outer tracks have been proven to be the fastest area on a hard disk, we can use that to our ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(advantage. By moving the paging file to the outer tracks, we give the paging file a major boost in ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(performance.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(As you can see from the example above, the transfer rate at the outer tracks are about 59MB/s while the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(central and inner tracks have transfer rates of about 49MB/s and 30MB/s respectively. Moving the paging file ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
(from the inner tracks to the outer tracks will almost double its performance! Even moving the paging file from) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(the central tracks to the outer tracks will give the paging file a transfer rate boost of 20%.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(But please note that this method must be used in conjunction with a permanent paging file. This is because the) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(paging file cannot be moved to the outer tracks of the hard disk unless it is a permanent paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(How Do We Move The Paging File To The Outer Tracks?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(Before you can move the paging file to the outer tracks, you must first make the paging file permanent. Follow) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(the steps outlined in the previous pages. Once you have a permanent paging file, you can use your favourite ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(hard disk defragmentation utility to move the paging file to the outer tracks.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
(Unfortunately, Windows XP's Defrag utility does not have the ability to move paging file to the outer tracks. ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(You will have to use a third-party defragmentation utility to move the paging file to the outer tracks. I will) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
(use Diskeeper as an example.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(Windows NT, 2000 and XP does not allow the paging file to be moved while it is in used. Therefore, you must ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
(set Diskeeper to move the paging file during the next reboot.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(Run Diskeeper and click on Change your settings to expand its menu. You will see the screen below.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(Look for and click on Set a boot-time defragmentation. That will display this screen.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(Now, select the partition where the paging file resides and tick the checkbox of Defragment the paging file ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
(option. The option will be grayed out if there is no paging file in that partition.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(Then click OK and reboot the computer. Diskeeper will load up during the boot process and defragment the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(paging file. It will also move the paging file to the outer tracks.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(Once Diskeeper has completed its operation, Windows XP will boot up and start using the newly optimized paging) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
(file that is not only contiguous but also located in the outer tracks of the hard disk! Your paging file will ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(now show a marked boost in performance.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
(Please note that you cannot actually force Diskeeper to move the paging file right up to the outermost tracks.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
(Diskeeper has an internal algorithm that determines which files are best placed in the outermost tracks for ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(optimal performance.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
(In addition, Diskeeper requires a certain amount of free space to defragment and move the paging file. If you ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(do not have the necessary amount of free space in that partition, then Diskeeper may not defragment the paging) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
(file or move it to the outer tracks.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(Creating A Huge Paging File) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
() Tj
ET
endstream
endobj
35 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 34 0 R
>>
endobj
36 0 obj
<<
/Length 5383
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(Because games and applications often list a minimum paging file size, many people equate the size of the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(paging file with performance, just like they would with anatomy. But at least in the first case, that's not ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(true.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(What does a bigger paging file get you? Well, it gives you the ability to run more memory-intensive programs ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(concurrently. But does a larger paging file make virtual memory faster or better? Unfortunately, the answer is) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(no.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
( ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(Why Not?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(First of all, creating a large amount of virtual memory doesn't mean the operating system will use it all. ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(Although Windows will pre-emptively page out parts of idle applications, there are limits to how much it can ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(page out for each application. Therefore, creating an excessively large paging file will just waste hard disk ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(space.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(Second, if you ever move the paging file to the outer tracks of the hard disk, an excessively large paging ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(file will take up outer track space that could have been used to store system or application files. Look at ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(these two pictures :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(Hard disk with a 2GB paging file \(brown\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
(Hard disk with a 600MB paging file \(brown\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(The first one has a huge 2GB paging file while the second has a smaller 600MB paging file. For many systems, ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
(600MB of virtual memory is more than enough to multitask 7 or 8 applications at the same time or run the most ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(memory-intensive 3D games out there. So, anything more is just taking space.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(The extra space taken up by an excessively large paging file on the outer tracks could have been used to store) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(system or application files for faster access. The amount of space regained from using a smaller page file can) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(be seen as a red block in the second picture. You can bet on a faster loading time for Windows and other ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(applications if you limit the size of your paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(Therefore, the trick here is to gauge the maximum size of the paging file that you will ever need. This way, ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(you will not create an excessively large paging file that wastes hard disk space and takes up the precious ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(space on the outer tracks away from the system and application files.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(How Large Should The Paging File Be?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(That's a question that has bugged many users. Since the good old days of DOS and Windows 3.1, many users have ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
(staunchly adhered to an old rule of the thumb that the swapfile should be 2.5 x the amount of RAM.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
(In fact, whenever I visit other forums, I still notice many people quoting this old "rule". The question is - ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(is this rule still applicable for today's systems and operating systems? Unfortunately, it's a big NO!) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
( ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
(Why Not 2.5 x RAM?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(Back in the Windows 3.1 days, computers only came with 4MB or 8MB of RAM. 16MB of RAM was considered a luxury ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(in those days. I remember running Windows 3.1 on an Intel i386SX-16 machine with just 4MB of RAM!) Tj
ET
endstream
endobj
37 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 36 0 R
>>
endobj
38 0 obj
<<
/Length 5511
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(Because RAM in those days was horrendously expensive and only a limited amount of it was available in most ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(systems, a relatively large swapfile was needed. A swapfile size of 2.5 times the system RAM wasn't a lot, ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(considering the fact that most systems came with only 4MB or 8MB of RAM. That would only amount to a swapfile ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(size of 10MB to 20MB, which enabled most systems to run Windows 3.1 applications comfortably.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(But today, most computers come with at least 512MB of RAM and many have 1GB of RAM! If the 2.5X rule was ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(applied, that would result in "optimal" paging file sizes of 1.28GB to 2.5GB! That doesn't make sense at all.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(The purpose of buying more memory is to prevent the system from using the slower virtual memory. The more ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(memory you buy, the less you need to use virtual memory. It doesn't make sense to increase the paging file ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
(size every time you increase the amount of RAM in your system!) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(Imagine if you have follow the rule when you upgrade to 2GB of RAM in the future... You would have to create a) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(5GB paging file! That's ridiculous.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(The amount of hard disk space you dedicate to a paging file should depend on the amount of RAM you need to ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(use, NOT the amount of RAM you have. The 2.5 x system RAM rule was flawed from the beginning and it is ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(certainly not applicable today.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(Do not use the 2.5 x system RAM rule to determine the size of your paging file. Instead, you should first ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(gauge how much virtual memory is actually needed by the system during the heaviest memory load. Then use your ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(finding to set the most appropriate paging file size for your system.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(But You Require A Huge Paging File For A Memory Dump!) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(There are people who actually believe in increasing the size of the paging file following an increase in ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(system memory. That certainly goes against what we have been recommending, doesn't it? The reason is simple.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(Whenever Windows crashes, it first writes the memory contents to the paging file. After the computer is ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(restarted, Windows will create a memory dump file using the memory contents stored in the paging file. This ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(memory dump file is used to analyze the cause of the crash.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(However, for a complete memory dump to created, the paging file size should be large enough to store all the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(contents of the system memory. That's why the paging file size has to meet this equation :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(Paging file size = Physical memory in the system + 1MB) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(So, if you have 1024MB of memory, the paging file size should be 1025MB in size for a complete memory dump to ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
(be created successfully.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
(However, this does not mean you should increase the size of your paging file according to the amount of system) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(memory. Why not? Let's find out.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
( ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(Why Not?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
(First of all, there is no need to create a complete memory dump. Windows supports three different kinds of ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(memory dumps. Here is a summary of information from Microsoft's Knowledge Base.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
(Type Of Memory Dump) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(\t) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(Description) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(\t) Tj
ET
endstream
endobj
39 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 38 0 R
>>
endobj
40 0 obj
<<
/Length 5366
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(Size) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(Small) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(\t) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(    * Small memory dump files contain the least information, but consume the least disk space, 64 kilobytes ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(\(KB\).) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(    * Unlike kernel and complete memory dump files; Windows XP stores small memory dump files in the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(systemroot\\Minidump folder, instead of using the systemroot\\Memory.dmp file name.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
(    * Windows XP always create a small memory dump file when a Stop error occurs, even when you choose the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(kernel or complete memory dump file options.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(    * One of the services that use small memory dump files is the Error Reporting service. The Error Reporting) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
(service reads the contents of a small memory dump file to help diagnose problems that cause Stop errors.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(\t) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(64KB) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(Kernel) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(\t) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(    * This is an intermediate size dump file that records only kernel-level memory and can occupy several ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(megabytes \(MB\) of disk space.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(    * When a Stop error occurs, Windows XP Professional saves a kernel memory dump file to a file named ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(systemroot\\Memory.dmp and create a small memory dump file in the systemroot\\Minidump folder.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(    * You cannot exactly predict the size of a kernel memory dump file because this depends on the amount of ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
(kernel-mode memory allocated by the operating system and drivers present on the machine when the Stop error ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(occurred.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(\t) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(About 1/3 of system memory) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
(Complete) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(\t) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(    * A complete memory dump file contains the entire contents of physical memory when the Stop error ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(occurred.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(    * The file size is equal to the amount of physical memory installed plus 1 MB.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(    * When a Stop error occurs, the operating system saves a complete memory dump file to a file named ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
(systemroot\\Memory.dmp and creates a small memory dump file in the systemroot\\Minidump folder.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(\t) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(System memory + 1MB) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(Although you may think that it is always good to create a complete dump file. However, that is not true. Even ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
(Microsoft recommends creating a kernel memory dump, instead of a complete memory dump. Why? I'll quote them :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
(            For most purposes, a kernel memory dump file is the most useful kind of file for troubleshooting ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
(Stop messages. It contains more information than the small memory dump file and is significantly smaller than ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
(the complete memory dump file. It omits only those portions of memory that are unlikely to have been involved ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(in the problem.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
(In addition, a kernel memory dump will require the paging file to be only about 1/3 of the system memory. It ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(will also require the same amount of free hard disk space.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(Even if you wish to create a complete memory dump, there is still no need to create a large paging file. Even ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(if you restrict your paging file to, for example, 500MB; Windows XP will automatically expand the paging file ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(to store the memory dump BEFORE it is written out to disk on the next reboot.) Tj
ET
endstream
endobj
41 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 40 0 R
>>
endobj
42 0 obj
<<
/Length 5325
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(Therefore, I consider it to be a real waste of hard disk space if you have 2GB of memory and yet create a 2GB ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(paging file, just so Windows XP can write an enormous memory dump the next time it crashes.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(How Much Virtual Memory Do I Need?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(No one can tell you how much hard disk space you need to allocate to a permanent paging file because every ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(system is different and everyone uses his/her system differently.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(If you create a permanent paging file that is too small, then Windows will continuously create more virtual ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(memory via a dynamic extension to the permanent paging file. This reduces the paging file's performance) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(If you create a permanent paging file that is too large, you are only wasting hard disk space, especially on ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(the outer tracks.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(So, the best method would be to accurately gauge how much virtual memory you actually need. This allows you to) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(create a permanent paging file with the appropriate size. To do that, you need to monitor your paging file ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(usage. Let's see how you can do that.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
( ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(Finding Out In Windows 9x) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
(Give your system a clean boot and once you are in Windows 95/98, load System Monitor. You can get to it via ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(Start Menu > Programs > Accessories > System Tools. You will see this screen :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(Go to the Edit menu and click on Add Item...) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
(In the next screen, select the Memory Manager category and add Swapfile in use. Click OK and you will see this) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(screen :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(Now, you can monitor the size of your paging file. Start up and run all the applications that you usually use ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(at the same time. Load several documents and work files. Play around with them and check the peak value for ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(the paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
(Then play several of the most memory-intensive games you have. 3D games with large textures are good ones to ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(test. At all times, record down the highest value for the paging file size that System Monitor reports.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(Once you are done, select the highest value that has been recorded for the paging file size and round it up to) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
(the nearest 100MB. For example, if the biggest size your paging file ever went during the tests was 619MB, ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(then 700MB is the ideal size for your paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(But always make sure you add at least 40-50MB as a cushion against future memory-guzzling applications or ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
(games. For example, if the largest size your paging file expanded to during your tests was 684MB, then 750MB ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
(would be an ideal size for your paging file. ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(How Much Virtual Memory Do I Need?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
(Finding Out In Windows XP) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
(Finding your optimal paging file size in Windows XP is much easier.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(Just give your system a clean boot. Once you are in Windows XP, run Task Manager . You can get to it by ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(right-clicking on the taskbar and selecting Task Manager. You can also access it through the keyboard shortcut) Tj
ET
endstream
endobj
43 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 42 0 R
>>
endobj
44 0 obj
<<
/Length 5618
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(of Ctrl-Alt-Del.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(After you load Task Manager, click on the Performance tab. You will see this screen :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(Now, you can monitor the size of your paging file. Start up and run all the applications that you usually use ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(at the same time. Load several documents and work files. Play around with them and check the peak value for ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(the paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
(Then play several of the most memory-intensive games you have. 3D games with large textures are good ones to ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(test. At all times, record down the highest value for the paging file size that System Monitor reports.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
(Once you are done, select the highest value that has been recorded for the paging file size and round it up to) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(the nearest 100MB. For example, if the biggest size your paging file ever went during the tests was 619MB, ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(then 700MB is the ideal size for your paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(But always make sure you add at least 40-50MB as a cushion against future memory-guzzling applications or ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(games. For example, if the largest size your paging file expanded to during your tests was 684MB, then 750MB ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(would be an ideal size for your paging file. ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(Moving The Paging File To A Different Partition) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(Another popular technique proposed by many tweakers suggests moving a temporary paging file from the default ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(first partition to a separate, dedicated partition.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(The reasons for this technique are ostensibly two-fold :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(                + to reduce fragmentation of the first partition) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(                + to ensure that the paging file will remain contiguous even though it is a temporary paging ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
(file) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(This idea looks good because it enables users of temporary paging files to keep their primary partition neat ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(and the paging file contiguous for a speed boost.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(However, many users of this technique failed to take into account several things. Let's see what they are.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
( ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(Cylinders And Partitions) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
(First of all, let's take a look at a hard disk cylinder. A cylinder consists of the same tracks on all the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(platters in the hard disk.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(The first cylinder, nominally called cylinder 0, is coloured in bright green. It is the outer most cylinder ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
(and consists of the first track of all the platters in the hard disk. Such groups of tracks have a cylindrical) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
(look, hence the name. Cylinder n \(in red\) is the last cylinder of the hard disk, where n can be any integer.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(Partitions are constructed using full cylinders. The first one starts at cylinder 0 and go out to where you ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(specify. The next one starts on the following cylinder, and so on. If you try to create a partition with an ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
(end that falls in the middle of the cylinder, FDISK or similar utilities will round it up so that the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(partition occupies the entire cylinder, instead of a partial cylinder.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(Needless to say, the first partition will always start with the first track of every platter. In other words, ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(the first partition will always be the fastest partition in the hard disk, followed by the second partition ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(and so on. Therefore, if you create a second partition and dump the paging file there, you will actually be ) Tj
ET
endstream
endobj
45 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 44 0 R
>>
endobj
46 0 obj
<<
/Length 5835
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(moving it to a slower part of your hard disk!) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(As you can see, while the temporary paging file will be remain contiguous using this technique, the transfer ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(of the paging file from the outer tracks to the inner tracks of the hard disk will inevitably reduce its ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(performance.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(Need More Reasons?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
(Creating a dedicated partition for the dynamic paging file also means tying up hard disk space and inviting ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(inflexibility.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
(Users of FDISK will find it impossible to change the size of the paging file partition when they need to do ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(so. In fact, they will have to remove at least two partitions to create a larger one. If they only have one ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(primary and a secondary paging file partition, then they will have to remove both and recreate two new ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(partitions.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(Users of special utilities like Partition Magic will have an easier time as they can easily adjust the sizes ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(of the partitions. But in the end, this method is counter-productive because for all your trouble, you have ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(just slowed down your paging file and orphaned off a portion of your hard disk for the dedicated partition.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(The main reason for using a temporary paging file is actually to save hard disk space. Users of a temporary ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(paging file avoid tying up large amounts of hard disk space in a permanent swapfile.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
(However, this method actually requires you to set aside a large amount of hard disk space and worse, place ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(cordon off this space in an inflexible partition. If you can afford to allocate space for this dedicated ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
(partition, you would be better off using the space for a permanent paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(In my opinion, this technique is a waste of time and needlessly endangers your data. Messing around with FDISK) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
(and partitions can be heartbreakingly exciting, if you catch my drift.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
( ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(More Partitions = Data Parachute?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(Some users advocate using multiple partitions for safety reasons. Their opinion is that in the event of a hard) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
(disk crash, corruption to the boot sector or FAT \(File Allocation Tables\), only the primary partition will be ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(lost, leaving precious data safe in the other partitions.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(Unfortunately, from my experience involving hard disk crashes, every partition was inevitably wiped out. When ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
(a hard disk head crashes with a platter, I seriously doubt it would politely avoid scoring through the media ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(that has been allocated to other partitions.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(Russ Johnson, a Product Support Engineer from Symantec Corporation has this to say, "It's not a substitute for) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
(a good backup, but it may save you from having to restore all of your data from a backup. However, if your ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
(first partition is taken out, more than likely the whole drive will be lost. The first partition is also the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
(location of the Master Boot Record and the partition table.") Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(Now, I agree that storing your data on a different partition is actually a good practice. It can save your ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
(data if the first partition gets corrupted due to a soft error. For example, even if the FAT of one of the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(partitions gets corrupted, data on the other partitions will still be safe.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(So, if data integrity \(as well as disk management\) is important to you, you should consider using multiple ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(partitions. However, this does not mean you should move the paging file to a different partition... oh no... ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
() Tj
ET
endstream
endobj
47 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 46 0 R
>>
endobj
48 0 obj
<<
/Length 5649
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(When the paging file is permanent, tweakers who advocate moving paging files around will tell you to move your) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(partition to a second hard disk. Why?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(As the theory goes, this allows your system to access both the paging file on the second hard disk and data on) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(the first hard disk concurrently. This theoretically improves performance a lot! But does it really work?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(Well, it depends.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
( ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(Hard Disk, NOT Partition!) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(Many people get confused by drive letters. They assume that moving the paging file from drive C: to drive D: ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(is the same as moving it to another hard disk. However, this is not true.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(The operating system does not bother with physical drives. It is only interested in logical drives. By this, ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(we mean properly-formatted partitions that can be accessed by the operating system.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(To the operating system, partitions appear as physically-separate hard disks although they may reside on the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(same hard disk. If you partition your hard disk into three different partitions, your operating system will ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(identify them as three logical drives \(Drive C:, Drive D: and Drive E:\). But they are still physically on the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(same hard disk!) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
(Therefore, if you merely move the paging file to a different logical drive, you could be doing nothing more ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(moving it to a different partition. So, please check and make sure you are moving it to a physically-separate ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
(hard disk. Preferably, it should be the first partition in that hard disk.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(Parallel-ATA) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(Many tweakers forget one thing when they move their paging files to the second hard disk - only one PATA ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(\(Parallel-ATA\) device can be active at any one time on the same IDE channel.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(Most users slave the second hard disk to the first hard disk on the primary IDE channel and put the removable ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(media drives \(CD writers, DVD-ROM, etc.\) on the secondary IDE channel. That is theoretically sound practice ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(but it actually negates the purpose of moving the paging file off the primary hard disk!) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(Because both hard disks are on the same IDE channel, they can't be active at the same time. So, there is no ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(way data can be read from both hard disks at the same time. In fact, because the secondary hard disk is often ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(slower and smaller than the primary hard disk, the performance of the paging file on the second hard disk will) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
(actually be worse off.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
( ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
(So How Do We Make It Work?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
(The only way for this method to work is to put the first and second hard disks on separate IDE channels. That ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(means the first hard disk gets hooked up to the primary IDE channel and second hard disk gets the secondary ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(IDE channel. This allows both IDE channels can be active at the same time, delivering data from both hard ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
(disks concurrently.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
(In addition, the second hard disk needs to be at least half as fast as the primary hard disk. This allows the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(paging file on the second hard disk to be at least as fast as a paging file on the first hard disk. Otherwise,) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(the performance advantage accessing the paging file concurrently on a second hard disk will be negated by the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(slower performance of the second hard disk.) Tj
ET
endstream
endobj
49 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 48 0 R
>>
endobj
50 0 obj
<<
/Length 5600
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(Remember, if the first hard disk can serve data to and from both the application in use and the paging file ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(faster than the second hard disk can access the paging file alone, then it is pointless to maintain a paging ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(file on the second hard disk.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(But if the second hard disk is more than half as fast as the first hard disk, then it would be advantageous to) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(move the paging file there because the paging file can then be accessed concurrently with data on the first ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(hard disk. In addition, the valuable outer tracks on the first hard disk will be freed up for use by the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
(operating system.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(Other Considerations) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(The trouble with such a setup is that most motherboards usually with only two IDE channels.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(If you slave your DVD writer to the first hard disk \(on the primary IDE channel\), then you may have trouble ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(writing data from the first hard disk to a DVD. This is because the IDE channel has to interleave its ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(operations between the first hard disk and the DVD writer.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(You won't have any trouble writing data from devices on the second IDE channel to the DVD writer though. This ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(is because the DVD writer is on the first IDE channel and can thus be accessed concurrently with the devices ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(on the second IDE channel.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(However, if you slave your DVD writer to the second hard disk \(on the secondary IDE channel\), then you may ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
(have problems with games running off CDs or DVDs in that drive. Of course, this time you won't have any ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(trouble writing data from devices on the first IDE channel to the DVD writer!) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(Either way, you will face performance compromises. It is a great idea but implementation is not quite as ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(simple as you might think. The key to making this work is to be aware of such considerations and plan your ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
(setup accordingly.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(But if your motherboard comes with enough IDE channels to give each device its own channel, then the way is ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(clear - hook the second hard disk to a separate IDE channel and move the paging file there! ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(Serial-ATA) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
(The beauty of Serial-ATA is that each device is given its own channel. This completely circumvents the issues ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(that Parallel-ATA drives have with sharing the same IDE channel.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(So, if you are only using Serial-ATA devices, you can immediately move the paging file to the second hard disk) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
(for a big speed boost. Just make sure you move it to a partition that is on the second hard disk, not the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(second partition in your first hard disk. ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(How Do I Move The Paging File In Windows 9x?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
(If you want to move your paging file to a different partition or drive, first open up System Properties, ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
(either through the Control Panel or by right-clicking on My Computer and selecting Properties.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(Once in System Properties, click on the Performance tab and you will see the following picture :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(Right at the bottom, you'll see a Virtual Memory... button. Click on it to get the following screen :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(Select Let me specify my own virtual memory settings. This allows you to choose the logical drive in which you) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(would like to place the paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
() Tj
ET
endstream
endobj
51 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 50 0 R
>>
endobj
52 0 obj
<<
/Length 5405
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(Click on the pull-down list. It will show you all the available partitions and hard disks in your system. ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(Select the logical drive where you want the paging file to be.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(Then set the minimum and maximum paging file sizes and click OK. After rebooting, your paging file will be ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(established in the logical drive you selected.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(Again, please remember that each logical drive represents a partition, not a physical drive. So, if you want ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(to move your paging file to a separate hard disk, select a logical drive that resides on that hard disk. ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
(Preferably, it should be the first partition in the other hard disk \(which should be on its own IDE channel\).) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
( How Do I Move The Paging File In Windows 2000?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(First, open up System Properties, either through the Control Panel or by right-clicking on My Computer and ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(selecting Properties.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(Once in System Properties, click on the Advanced tab. There will be three options. Click on Performance ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(Options... and you will see the following picture :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(The second section you see is titled Virtual Memory. Under it, there is a Change... button. Click on it to get) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(the following screen :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(This is where you manage Windows 2000's paging file settings.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
(Just scroll through the selection of logical drives available. Click on the logical drive that you want to ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(place the paging file. Then set the initial and maximum paging file sizes and click Set.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(To remove the paging file from the default location in the first logical drive, select drive C: and set both ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(initial and maximum sizes to 0 \(zero\). Then click Set.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(After you are done, just click OK and allow Windows 2000 to reboot your computer. After rebooting, your paging) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(file will be established in the logical drive you selected.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(Again, please remember that each logical drive represents a partition, not a physical drive. So, if you want ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(to move your paging file to a separate hard disk, select a logical drive that resides on that hard disk. ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(Preferably, it should be the first partition in the other hard disk \(which should be on its own IDE channel\).) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(How Do I Move The Paging File In Windows XP?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(First, open up System Properties, either through the Control Panel or by right-clicking on the My Computer ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
(icon and selecting Properties.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
(Once in System Properties, click on the Advanced tab. There will be three sections.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
(Click on Settings in the Performance section and the Performance Options screen will pop up. Click on the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
(Advanced tab and you'll see the following picture :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(The second section you see is titled Virtual memory. Under it, there's a Change button. Click on it to get the) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(following screen :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(This is where you manage Windows XP's paging file settings.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(You can select the logical drive you wish to place the paging file in by clicking on the list of logical ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(drives shown on the screen.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
() Tj
ET
endstream
endobj
53 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 52 0 R
>>
endobj
54 0 obj
<<
/Length 5323
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(Just scroll through the selection of logical drives available. Click on the logical drive that you want to ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(place the paging file. Then set the initial and maximum paging file sizes and click Set.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(To remove the paging file from the default location in the first logical drive, select drive C: and select No ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(paging file. Then click Set.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(After you are done, just click OK and allow Windows XP to reboot your computer. After rebooting, your paging ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(file will be established in the logical drive you selected.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(Again, please remember that each logical drive represents a partition, not a physical drive. So, if you want ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(to move your paging file to a separate hard disk, select a logical drive that resides on that hard disk. ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
(Preferably, it should be the first partition in the other hard disk \(which should be on its own IDE channel\).) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(Multiple Hard Disks) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(With hard disk prices dropping and multiple hard disks becoming common, this introduces two interesting ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(possibilities :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(                + multiple paging files) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(                + moving the paging file to a RAID array) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(Both methods appear to offer better paging file performance. But do they really offer better performance? ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(Let's find out...) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
( ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(Multiple Paging Files) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
(With multiple hard disks in the same system, you can actually split the paging file into multiple paging ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(files!) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(Instead of just moving the paging file from one hard disk to another, you can actually place a paging file on ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(each and every hard disk in the system. And if each hard disk has its own IDE channel, having multiple paging ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(files will greatly increase its performance.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
(Because each hard disk with its own channel can be accessed concurrently with the other hard disks in the same) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(system, multiple paging files will allow the computer to access all of them simultaneously. Needless to say, ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(this greatly increases its read and write performance.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
(However, it is still recommended that you do not place the paging file in the primary hard disk. Leave the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(outer tracks there for the operating system to use. This will also free up the first hard disk for the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
(operating system's use, instead of sharing it with the paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
(So, if you have four hard disks in your system, you should create only three paging files. One in each of the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
(other hard disks, leaving the primary boot hard disk without a paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(Creating Multiple Paging Files In Windows XP) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
(First, open up System Properties, either through the Control Panel or by right-clicking on the My Computer ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(icon and selecting Properties.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(Once in System Properties, click on the Advanced tab. There will be three sections.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(Click on Settings in the Performance section and the Performance Options screen will pop up. Click on the ) Tj
ET
endstream
endobj
55 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 54 0 R
>>
endobj
56 0 obj
<<
/Length 4908
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(Advanced tab and you'll see the following picture :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(The second section you see is titled Virtual memory. Under it, there's a Change button. Click on it to get the) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(following screen :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(This is where you manage Windows XP's paging file settings.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(You can select the logical drive in you wish to create a paging file by clicking on the list of logical drives) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
(shown on the screen.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(Just scroll through the selection of logical drives available. Click on the logical drive in which you want to) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
(create a paging file. Then set the initial and maximum paging file sizes and click Set. Do this for as many ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(hard disks as you want in your system.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(To remove the paging file from the default location in the first logical drive, select drive C: and select No ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(paging file. Then click Set.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(After you are done, just click OK and allow Windows XP to reboot your computer. After rebooting, multiple ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(paging file will be created in the logical drives you selected.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(Please remember that each logical drive represents a partition, not a physical drive. So, if you want to ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(create a paging file in a separate hard disk, select a logical drive that resides on that hard disk. ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(Preferably, it should be the first partition in the other hard disk \(which should be on its own IDE channel\).) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(Moving The Paging File To A RAID Array) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(Before proceeding, you should read our RAID Optimization Guide for a primer on the different RAID levels.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
( ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(RAID 0) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(RAID 0 uses striping to achieve better performance. Putting the paging file on a RAID 0 array will greatly ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(improve both its read and write performance because the paging file will be split up between the hard disks in) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(the RAID 0 array.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(Although RAID 0 does not offer any data redundancy, that is perfectly alright for the paging file since it is ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(only used for the temporary storage of the system's memory contents.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
( ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
(RAID 1) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
(A paging file on a RAID 1 array may benefit from a faster access time. But because the paging file has to be ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
(mirrored on a second hard disk, this greatly degrades the paging file's write performance. In addition, the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
(paging file will not benefit from the additional data redundancy offered by RAID 1.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(Therefore, it is recommended that you do not put your paging file in a RAID 1 array. You should place the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
(paging file on a separate hard disk.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
( ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(RAID 0+1) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
() Tj
ET
endstream
endobj
57 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 56 0 R
>>
endobj
58 0 obj
<<
/Length 5165
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(Although the paging file will benefit from the increased read performance in a RAID 0+1 array, its write ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(performance will be as severely degraded as it would be in a RAID 1 array. In addition, the paging file will ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(not benefit from the additional data redundancy offered by RAID 0+1.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(Therefore, it is recommended that you do not put your paging file in a RAID 0+1 array. You should place the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(paging file on a separate hard disk.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
( Moving The Paging File To A RAID Array) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(RAID 5) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
(RAID 5's distributed parity requires a lot of calculations. Moving the paging file to a RAID 5 array will ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(greatly increase the amount of calculations the RAID controller has to do. This greatly reduces its ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(performance. Again, the paging file will not benefit from the additional data redundancy offered by RAID 5.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(Therefore, it is recommended that you do not put your paging file in a RAID 5 array. You should place the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(paging file on a separate hard disk.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
( ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(JBOD) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(When the hard disks in a JBOD array, they act exactly like a single logical drive. Therefore, placing the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
(paging file here will not incur any benefits at all. It will just be like putting it on the first hard disk.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
( ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(Conclusion) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
(Generally, placing the paging file in a RAID array is not recommended at all. The only situation where a RAID ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(array can actually improve the paging file's performance is if the RAID array was created using RAID 0. ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(Otherwise, avoid placing the paging file in a RAID array.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
( ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
(How To Place The Paging File In The RAID Array) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(To the operating system, the RAID array appears as an ordinary logical drive. Therefore, moving the paging ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(file to the RAID array is as simple as moving it to another logical drive. Just follow the instructions for ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
(moving the paging file to a different logical drive.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
(Moving The Paging File To A RAM Drive) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
(A RAM drive is nothing more than a logical drive created out of system memory.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
(To the operating system, a RAM appears as a normal logical drive, albeit a very fast one! Because it is ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(created using system memory, a RAM drive is fast. VERY fast, in fact. As I mentioned earlier, even ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(dual-channel PC2700 DDR memory is over 70X faster than the fastest hard disk.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(That's why many people actually advocate moving the paging file to a RAM drive. Their reason is simple. ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
(Because a RAM drive is so fast, moving the paging file there will greatly improve its performance.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(They are most certainly correct. Moving the paging file into a RAM drive will definitely give it an enormous ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(boost in performance. However, that is really counter-productive. Let's see why.) Tj
ET
endstream
endobj
59 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 58 0 R
>>
endobj
60 0 obj
<<
/Length 5382
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
( ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(From RAM To Hard Disk To RAM?) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(The purpose of a paging file is to create virtual memory for situations where there is not enough system ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(memory. Virtual memory serves as an emergency source of additional memory, only to be used when there is not ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(enough system memory.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
(The RAM drive, on the other hand, is used to create a very fast pool of temporary storage space in the system ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(memory. It ties up system memory, so it is usually created when there is a lot of free system memory. Even ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
(then, it is usually kept small and only used to store temporary work files.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(Therefore, does it make sense to use limited system memory to create a RAM drive that is used to service the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(paging file? No, it doesn't make sense at all.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(Remember, most paging files are very large, a few hundred megabytes to a gigabyte in size. Most computers even) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(come with enough memory to create such a large RAM drive, much less move the entire paging file to the RAM ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(drive.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(Even if you have a lot of system memory, creating a large RAM drive reduces the pool of available system ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
(memory. This increases the need for virtual memory which means more data will have to be paged out into the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(paging file. This increases the size of the paging file which will inevitably be much larger than the RAM ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
(drive.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
(At this point, Windows will automatically create more virtual memory via a dynamic paging file. Because a ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
(large portion of the system memory has already been taken up by the RAM drive, this will cause a lot of data ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(to be paged out to a large dynamic paging file on the hard disk. That defeats the purpose of moving the paging) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
(file to the RAM drive - improved performance.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(If your system has a lot of system memory, don't waste your time creating a RAM drive to service the paging ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(file. If there is a lot of free system memory, Windows will not need to page out data to the paging file. That) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
(would produce the best results. Nothing is faster than running the programs directly in system memory.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(Reducing Reliance On Virtual Memory) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(Windows can get too enthusiastic about paging data out to the paging file. This can lead to unnecessary ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
(paging, even when there is a lot of free system memory.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
(Luckily, we can do something about this :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
(                + Enabling the Pagefile_Call_Async_Manager service \(Windows 98, Me\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(                + Stop NTExecutive from paging \(Windows NT, 2000, XP and above\)) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
(We will take a look at each and see how they work.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
( ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
(Enabling The Pagefile_Call_Async_Manager Service) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
(Microsoft added a Pagefile_Call_Async_Manager feature in Windows 98. This ostensibly forces Windows 98 to ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(behave more like Windows 95 by asynchronously paging out data during periods of inactivity. According to ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
(Microsoft, this decreases performance. However, it is actually quite the opposite.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
() Tj
ET
endstream
endobj
61 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 60 0 R
>>
endobj
62 0 obj
<<
/Length 5088
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(Enabling this feature actually forces Windows 98 to be more conservative about using the paging file. Windows ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
(98 will reduce the amount of paging and keep more data in system memory. This improves performance by keeping ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(more data in system memory than in the paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
(Needless to say, it is recommended that you enable the Pagefile_Call_Async_Manager service. Just make sure ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(your system has a good amount of system memory.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(To enable the Pagefile_Call_Async_Manager service, you will have to edit the System.ini file \(usually found in) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
(the drive:\\\\Windows\\ folder.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(Look for the [386Enh] section. In that section, add the following entry under the [386Enh] section :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(            [386Enh]) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
(            ConservativeSwapfileUsage=1) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(Save the change you made to the System.ini file and reboot the computer. When Windows 98 boots up again, it ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
(will be using a more conservative approach to paging.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
(Incidentally, this method is said to work with Windows Me although I cannot confirm this. But please note that) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(this method does not work in Windows NT, 2000 and XP.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
(Stop NTExecutive From Paging) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 478.507 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 464.333 Td
(In Windows NT, 2000 and XP, you can prevent pageable drivers and system code in the Windows NT Executive from ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 450.16 Td
(being paged out to the paging file.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 435.987 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 421.814 Td
(Normally, pageable drivers and system codes are paged out to the paging file to free up memory. Naturally, ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 407.64 Td
(this reduces the performance of the operating system and affected drivers.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 393.467 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 379.294 Td
(However, you can easily change that and force Windows to keep all drivers and system code in the system ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 365.121 Td
(memory. But you will need to edit the registry.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 350.948 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 336.774 Td
(Start up Registry Editor by running regedit.exe in the drive:\\Windows\\ folder or by going to Start Menu -> ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 322.601 Td
(Run... -> regedit.exe.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 308.428 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 294.255 Td
(Once you have opened up Registry Editor, go to the following subkey :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 280.081 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 265.908 Td
(HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Memory Management) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 251.735 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 237.562 Td
(You will see the following screen :-) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 223.388 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 209.215 Td
(Look for the DisablePagingExecutive option. By default, it is set to 0.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 195.042 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 180.869 Td
(Double-click on it and change its value to 1. Then close Registry Editor and reboot your computer.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 166.696 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 152.522 Td
(When Windows boots up again, the pageable drivers and system code will no longer be paged out to the paging ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 138.349 Td
(file. Instead, they will be retained in system memory for maximum performance.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 124.176 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 110.003 Td
(This method works with Windows NT, 2000 and XP. It does not work with Windows 98 or Windows Me.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 95.829 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 81.656 Td
(Conclusion) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 67.483 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 53.31 Td
(Optimizing the paging file isn't a very hard thing to do. The main problem is evaluating and selecting the ) Tj
ET
endstream
endobj
63 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 62 0 R
>>
endobj
64 0 obj
<<
/Length 2436
>>
stream
BT
/F0 10 Tf
0 0 0 rg
28.346 804.491 Td
(best methods of optimization for your system.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 790.318 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 776.144 Td
(The previous pages have discussed, at some length, the pros and cons of the different methods. By now, you ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 761.971 Td
(should be able to see a pattern.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 747.798 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 733.625 Td
(Evidently, creating a semi-permanent, contiguous paging file that is slightly larger than what you normally ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 719.451 Td
(need and moving it to the outer tracks of the hard disk are generally the best ways to optimize the paging ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 705.278 Td
(file. If you have multiple hard disks, creating multiple paging files will also greatly improve its ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 691.105 Td
(performance. Needless to say, we should also force Windows to reduce its reliance on virtual memory.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 676.932 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 662.759 Td
(But we should generally avoid placing the paging file in RAID arrays or a RAM drive. It also does not make ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 648.585 Td
(sense to create a really massive paging file. Needless to say, it is counter-productive to simply move the ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 634.412 Td
(paging file to another partition of the same hard disk.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 620.239 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 606.066 Td
(I hope this guide has been of great help to you in optimizing the paging file. Let us know if you have any ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 591.892 Td
(comments or perhaps new tips on further optimizing the virtual memory system!) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 577.719 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 563.546 Td
(Please feel free to take a look at our other guides and reviews or drop by our forums for a chat.) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 549.373 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 535.199 Td
(Don't forget to try your luck in our Hunt for the BOG Book Mega-Contest! There are USD 5000 worth of prizes to) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 521.026 Td
(be given away! Don't miss out on this opportunity! ) Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 506.853 Td
() Tj
ET
BT
/F0 10 Tf
0 0 0 rg
28.346 492.68 Td
() Tj
ET
endstream
endobj
65 0 obj
<<
/Type/Page
/Parent 2 0 R
/MediaBox[ 0 0 595.276 841.89 ]
/Contents 64 0 R
>>
endobj
66 0 obj
<<
/Type/Catalog
/Pages 2 0 R
>>
endobj
2 0 obj
<<
/Type/Pages
/Kids[
9 0 R
11 0 R
13 0 R
15 0 R
17 0 R
19 0 R
21 0 R
23 0 R
25 0 R
27 0 R
29 0 R
31 0 R
33 0 R
35 0 R
37 0 R
39 0 R
41 0 R
43 0 R
45 0 R
47 0 R
49 0 R
51 0 R
53 0 R
55 0 R
57 0 R
59 0 R
61 0 R
63 0 R
65 0 R
]
/Count 29
/Resources 3 0 R
>>
endobj
3 0 obj
<<
/ProcSet[/PDF/Text/ImageC]
/Font<<
/F0 7 0 R
>>
>>
endobj
xref
0 67
0000000000 65535 f
0000000009 00000 n
0000162628 00000 n
0000162899 00000 n
0000000168 00000 n
0000000168 00000 n
0000001113 00000 n
0000001256 00000 n
0000001421 00000 n
0000007381 00000 n
0000007475 00000 n
0000013142 00000 n
0000013238 00000 n
0000018805 00000 n
0000018901 00000 n
0000024848 00000 n
0000024944 00000 n
0000030223 00000 n
0000030319 00000 n
0000035888 00000 n
0000035984 00000 n
0000042235 00000 n
0000042331 00000 n
0000048022 00000 n
0000048118 00000 n
0000053439 00000 n
0000053535 00000 n
0000059239 00000 n
0000059335 00000 n
0000064908 00000 n
0000065004 00000 n
0000070612 00000 n
0000070708 00000 n
0000076243 00000 n
0000076339 00000 n
0000082269 00000 n
0000082365 00000 n
0000087800 00000 n
0000087896 00000 n
0000093459 00000 n
0000093555 00000 n
0000098973 00000 n
0000099069 00000 n
0000104446 00000 n
0000104542 00000 n
0000110212 00000 n
0000110308 00000 n
0000116195 00000 n
0000116291 00000 n
0000121992 00000 n
0000122088 00000 n
0000127740 00000 n
0000127836 00000 n
0000133293 00000 n
0000133389 00000 n
0000138764 00000 n
0000138860 00000 n
0000143820 00000 n
0000143916 00000 n
0000149133 00000 n
0000149229 00000 n
0000154663 00000 n
0000154759 00000 n
0000159899 00000 n
0000159995 00000 n
0000162483 00000 n
0000162579 00000 n
trailer
<<
/Size 67
/Root 66 0 R
/Info 1 0 R
/ID[(424044344ttiumypmaoGdRf)(424044344ttiumypmaoGdRf)]
>>
startxref
162968
%%EOF
